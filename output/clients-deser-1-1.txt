# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3824653384360 as seed for Random
159334.223 ops/s
Iteration   1: 231464.907 ops/s
Iteration   2: 230989.181 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  231227.044 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3837885223166 as seed for Random
139298.779 ops/s
Iteration   1: 269630.916 ops/s
Iteration   2: 270596.307 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  270113.611 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3851091778397 as seed for Random
371859.499 ops/s
Iteration   1: 509402.338 ops/s
Iteration   2: 531118.815 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  520260.576 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3864197861173 as seed for Random
170397.141 ops/s
Iteration   1: 237787.158 ops/s
Iteration   2: 252033.033 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  244910.095 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3877355005304 as seed for Random
20737.199 ops/s
Iteration   1: 125808.081 ops/s
Iteration   2: 139389.788 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  132598.935 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3890447818670 as seed for Random
12485.449 ops/s
Iteration   1: 18445.323 ops/s
Iteration   2: 22323.546 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  20384.435 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 42.86% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3903571925314 as seed for Random
45603.654 ops/s
Iteration   1: 84024.272 ops/s
Iteration   2: 85150.334 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  84587.303 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 50.00% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3916765932210 as seed for Random
69202.617 ops/s
Iteration   1: 129885.213 ops/s
Iteration   2: 145405.652 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  137645.432 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 57.14% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3929912897184 as seed for Random
123913.399 ops/s
Iteration   1: 255850.888 ops/s
Iteration   2: 271037.351 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  263444.119 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3943038955338 as seed for Random
166425.211 ops/s
Iteration   1: 300402.367 ops/s
Iteration   2: 308267.805 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  304335.086 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3956160097423 as seed for Random
63402.939 ops/s
Iteration   1: 138639.031 ops/s
Iteration   2: 158030.681 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  148334.856 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 78.57% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3969348050721 as seed for Random
40714.810 ops/s
Iteration   1: 75727.427 ops/s
Iteration   2: 116769.157 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  96248.292 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3982483021834 as seed for Random
79036.966 ops/s
Iteration   1: 151411.604 ops/s
Iteration   2: 160692.671 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  156052.137 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 92.86% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3995638501208 as seed for Random
156140.514 ops/s
Iteration   1: 183415.898 ops/s
Iteration   2: 207861.448 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  195638.673 ops/s


# Run complete. Total time: 00:03:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt       Score   Error  Units
Deserialization.avajejsonb           thrpt    2  231227.044          ops/s
Deserialization.avajejsonb_jackson   thrpt    2  270113.611          ops/s
Deserialization.dsljson              thrpt    2  520260.576          ops/s
Deserialization.dsljson_reflection   thrpt    2  244910.095          ops/s
Deserialization.fastjson             thrpt    2  132598.935          ops/s
Deserialization.flexjson             thrpt    2   20384.435          ops/s
Deserialization.genson               thrpt    2   84587.303          ops/s
Deserialization.gson                 thrpt    2  137645.432          ops/s
Deserialization.jackson              thrpt    2  263444.119          ops/s
Deserialization.jackson_afterburner  thrpt    2  304335.086          ops/s
Deserialization.jackson_blackbird    thrpt    2  148334.856          ops/s
Deserialization.jodd                 thrpt    2   96248.292          ops/s
Deserialization.logansquare          thrpt    2  156052.137          ops/s
Deserialization.moshi                thrpt    2  195638.673          ops/s
