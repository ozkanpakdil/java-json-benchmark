# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3186229047222 as seed for Random
544.882 ops/s
Iteration   1: 631.399 ops/s
Iteration   2: 631.311 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  631.355 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3199236108313 as seed for Random
395.954 ops/s
Iteration   1: 480.612 ops/s
Iteration   2: 482.364 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  481.488 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3212279373328 as seed for Random
671.231 ops/s
Iteration   1: 768.536 ops/s
Iteration   2: 767.974 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  768.255 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3225309906172 as seed for Random
501.745 ops/s
Iteration   1: 590.457 ops/s
Iteration   2: 602.147 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  596.302 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3238303818928 as seed for Random
273.365 ops/s
Iteration   1: 314.451 ops/s
Iteration   2: 317.847 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  316.149 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3251349461485 as seed for Random
23.803 ops/s
Iteration   1: 51.743 ops/s
Iteration   2: 53.293 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  52.518 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3264890328332 as seed for Random
295.547 ops/s
Iteration   1: 372.692 ops/s
Iteration   2: 366.629 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  369.661 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3277919462882 as seed for Random
340.018 ops/s
Iteration   1: 396.308 ops/s
Iteration   2: 394.507 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  395.408 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3290963965626 as seed for Random
334.507 ops/s
Iteration   1: 447.523 ops/s
Iteration   2: 447.108 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  447.315 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3303981759503 as seed for Random
443.486 ops/s
Iteration   1: 541.333 ops/s
Iteration   2: 541.204 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  541.268 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3316950098774 as seed for Random
447.642 ops/s
Iteration   1: 513.638 ops/s
Iteration   2: 513.594 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  513.616 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3329967564550 as seed for Random
288.721 ops/s
Iteration   1: 350.350 ops/s
Iteration   2: 348.402 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  349.376 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3343003000833 as seed for Random
60.198 ops/s
Iteration   1: 79.208 ops/s
Iteration   2: 85.340 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  82.274 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3356413918232 as seed for Random
401.630 ops/s
Iteration   1: 458.566 ops/s
Iteration   2: 460.339 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  459.453 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3369422774489 as seed for Random
376.480 ops/s
Iteration   1: 488.859 ops/s
Iteration   2: 488.746 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  488.802 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3382412139670 as seed for Random
243.498 ops/s
Iteration   1: 299.699 ops/s
Iteration   2: 300.143 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  299.921 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3395493231169 as seed for Random
391.565 ops/s
Iteration   1: 455.527 ops/s
Iteration   2: 452.487 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  454.007 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3408496887862 as seed for Random
34.766 ops/s
Iteration   1: 69.079 ops/s
Iteration   2: 68.608 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  68.844 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3421897960009 as seed for Random
365.163 ops/s
Iteration   1: 447.809 ops/s
Iteration   2: 452.760 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  450.284 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3434931789847 as seed for Random
148.240 ops/s
Iteration   1: 291.253 ops/s
Iteration   2: 291.839 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  291.546 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3447935986526 as seed for Random
357.382 ops/s
Iteration   1: 515.916 ops/s
Iteration   2: 522.274 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  519.095 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3460997905716 as seed for Random
173.466 ops/s
Iteration   1: 285.016 ops/s
Iteration   2: 281.585 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  283.301 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3474020072248 as seed for Random
38.959 ops/s
Iteration   1: 65.684 ops/s
Iteration   2: 64.746 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  65.215 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3487500361776 as seed for Random
67.150 ops/s
Iteration   1: 119.051 ops/s
Iteration   2: 119.261 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  119.156 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3500687019590 as seed for Random
154.328 ops/s
Iteration   1: 234.666 ops/s
Iteration   2: 229.564 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  232.115 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3513797535764 as seed for Random
41.217 ops/s
Iteration   1: 64.492 ops/s
Iteration   2: 71.536 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  68.014 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3527245572419 as seed for Random
143.275 ops/s
Iteration   1: 286.438 ops/s
Iteration   2: 288.579 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  287.508 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3540259149692 as seed for Random
232.870 ops/s
Iteration   1: 271.996 ops/s
Iteration   2: 269.868 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  270.932 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3553382583479 as seed for Random
58.164 ops/s
Iteration   1: 73.056 ops/s
Iteration   2: 73.420 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  73.238 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3566782692349 as seed for Random
58.387 ops/s
Iteration   1: 73.157 ops/s
Iteration   2: 75.597 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  74.377 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3580243893426 as seed for Random
255.330 ops/s
Iteration   1: 373.307 ops/s
Iteration   2: 390.978 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  382.143 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3593314304640 as seed for Random
193.957 ops/s
Iteration   1: 283.095 ops/s
Iteration   2: 279.300 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  281.197 ops/s


# Run complete. Total time: 00:07:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  631.355          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  481.488          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  768.255          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  596.302          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  316.149          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   52.518          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  369.661          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  395.408          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  447.315          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  541.268          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  513.616          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  349.376          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   82.274          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  459.453          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  488.802          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  299.921          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  454.007          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   68.844          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  450.284          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  291.546          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  519.095          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  283.301          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   65.215          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  119.156          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  232.115          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   68.014          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  287.508          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  270.932          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   73.238          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   74.377          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  382.143          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  281.197          ops/s
