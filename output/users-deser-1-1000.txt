# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3207146202881 as seed for Random
422.970 ops/s
Iteration   1: 438.215 ops/s
Iteration   2: 435.658 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  436.937 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3220461807233 as seed for Random
267.862 ops/s
Iteration   1: 372.345 ops/s
Iteration   2: 367.954 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  370.150 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3233807293697 as seed for Random
455.087 ops/s
Iteration   1: 613.688 ops/s
Iteration   2: 600.922 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  607.305 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3247101372668 as seed for Random
398.873 ops/s
Iteration   1: 463.970 ops/s
Iteration   2: 450.565 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  457.267 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3260372652230 as seed for Random
210.484 ops/s
Iteration   1: 276.195 ops/s
Iteration   2: 284.708 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  280.452 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3273796438553 as seed for Random
16.912 ops/s
Iteration   1: 39.825 ops/s
Iteration   2: 42.453 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  41.139 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3287893897992 as seed for Random
252.518 ops/s
Iteration   1: 302.424 ops/s
Iteration   2: 311.543 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  306.983 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3301208546350 as seed for Random
252.468 ops/s
Iteration   1: 300.673 ops/s
Iteration   2: 303.573 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  302.123 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3314508297489 as seed for Random
300.805 ops/s
Iteration   1: 375.585 ops/s
Iteration   2: 374.641 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  375.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3327781430788 as seed for Random
363.670 ops/s
Iteration   1: 440.822 ops/s
Iteration   2: 424.440 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  432.631 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3341008501765 as seed for Random
311.381 ops/s
Iteration   1: 401.696 ops/s
Iteration   2: 405.687 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  403.692 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3354231168187 as seed for Random
209.186 ops/s
Iteration   1: 257.259 ops/s
Iteration   2: 260.567 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  258.913 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3367573001633 as seed for Random
38.104 ops/s
Iteration   1: 49.081 ops/s
Iteration   2: 56.873 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  52.977 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3381448722740 as seed for Random
296.105 ops/s
Iteration   1: 353.047 ops/s
Iteration   2: 348.326 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  350.687 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3394831060419 as seed for Random
217.362 ops/s
Iteration   1: 356.172 ops/s
Iteration   2: 370.283 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  363.227 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3408203424257 as seed for Random
154.248 ops/s
Iteration   1: 218.790 ops/s
Iteration   2: 220.895 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  219.843 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3421502481321 as seed for Random
278.152 ops/s
Iteration   1: 327.678 ops/s
Iteration   2: 321.052 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  324.365 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3434775690772 as seed for Random
35.890 ops/s
Iteration   1: 57.387 ops/s
Iteration   2: 56.737 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  57.062 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3448546492217 as seed for Random
198.273 ops/s
Iteration   1: 319.197 ops/s
Iteration   2: 314.872 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  317.034 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3461795652674 as seed for Random
120.428 ops/s
Iteration   1: 237.986 ops/s
Iteration   2: 231.865 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  234.925 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3475080112113 as seed for Random
228.003 ops/s
Iteration   1: 428.922 ops/s
Iteration   2: 421.500 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  425.211 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3488360496407 as seed for Random
134.241 ops/s
Iteration   1: 215.072 ops/s
Iteration   2: 223.041 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  219.057 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3501642146052 as seed for Random
32.208 ops/s
Iteration   1: 50.434 ops/s
Iteration   2: 53.304 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  51.869 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3515445876809 as seed for Random
19.772 ops/s
Iteration   1: 32.380 ops/s
Iteration   2: 35.525 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  33.953 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3529905042794 as seed for Random
73.934 ops/s
Iteration   1: 163.690 ops/s
Iteration   2: 160.961 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  162.326 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3543393366086 as seed for Random
30.574 ops/s
Iteration   1: 55.876 ops/s
Iteration   2: 52.940 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  54.408 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3557400115598 as seed for Random
166.015 ops/s
Iteration   1: 223.364 ops/s
Iteration   2: 233.126 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  228.245 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3570812185518 as seed for Random
176.187 ops/s
Iteration   1: 208.091 ops/s
Iteration   2: 203.873 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  205.982 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3584215264474 as seed for Random
39.742 ops/s
Iteration   1: 56.968 ops/s
Iteration   2: 57.165 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  57.066 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3598206147613 as seed for Random
29.498 ops/s
Iteration   1: 50.914 ops/s
Iteration   2: 49.249 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  50.081 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3612071685905 as seed for Random
152.648 ops/s
Iteration   1: 273.044 ops/s
Iteration   2: 278.678 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  275.861 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3625374866475 as seed for Random
154.020 ops/s
Iteration   1: 213.877 ops/s
Iteration   2: 231.140 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  222.509 ops/s


# Run complete. Total time: 00:07:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  436.937          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  370.150          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  607.305          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  457.267          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  280.452          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   41.139          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  306.983          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  302.123          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  375.113          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  432.631          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  403.692          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  258.913          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   52.977          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  350.687          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  363.227          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  219.843          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  324.365          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   57.062          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  317.034          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  234.925          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  425.211          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  219.057          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   51.869          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   33.953          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  162.326          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   54.408          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  228.245          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  205.982          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   57.066          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   50.081          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  275.861          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  222.509          ops/s
