# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2990580043443 as seed for Random
583.301 ops/s
Iteration   1: 667.194 ops/s
Iteration   2: 653.448 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  660.321 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3003613698528 as seed for Random
421.127 ops/s
Iteration   1: 482.906 ops/s
Iteration   2: 483.830 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  483.368 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3016617722251 as seed for Random
711.228 ops/s
Iteration   1: 778.759 ops/s
Iteration   2: 803.470 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  791.115 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3029611898046 as seed for Random
557.930 ops/s
Iteration   1: 607.605 ops/s
Iteration   2: 607.981 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  607.793 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3042557348900 as seed for Random
292.797 ops/s
Iteration   1: 379.176 ops/s
Iteration   2: 379.353 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  379.264 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3055543709121 as seed for Random
25.707 ops/s
Iteration   1: 45.842 ops/s
Iteration   2: 45.683 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  45.763 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3069158301663 as seed for Random
328.311 ops/s
Iteration   1: 345.191 ops/s
Iteration   2: 349.053 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  347.122 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3082133219553 as seed for Random
349.385 ops/s
Iteration   1: 399.536 ops/s
Iteration   2: 397.991 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  398.764 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3095062107199 as seed for Random
419.041 ops/s
Iteration   1: 482.780 ops/s
Iteration   2: 487.944 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  485.362 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3108021488225 as seed for Random
494.584 ops/s
Iteration   1: 564.900 ops/s
Iteration   2: 557.296 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  561.098 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3120939016178 as seed for Random
459.245 ops/s
Iteration   1: 532.896 ops/s
Iteration   2: 528.758 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  530.827 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3133900786116 as seed for Random
301.336 ops/s
Iteration   1: 356.715 ops/s
Iteration   2: 354.301 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  355.508 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3146877246715 as seed for Random
60.881 ops/s
Iteration   1: 82.831 ops/s
Iteration   2: 79.879 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  81.355 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3160160423419 as seed for Random
437.024 ops/s
Iteration   1: 509.146 ops/s
Iteration   2: 509.728 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  509.437 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3173131741750 as seed for Random
434.784 ops/s
Iteration   1: 505.767 ops/s
Iteration   2: 505.907 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  505.837 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3186094256215 as seed for Random
261.009 ops/s
Iteration   1: 325.530 ops/s
Iteration   2: 323.396 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  324.463 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3199066623959 as seed for Random
330.832 ops/s
Iteration   1: 443.138 ops/s
Iteration   2: 445.186 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  444.162 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3212000984971 as seed for Random
43.964 ops/s
Iteration   1: 65.186 ops/s
Iteration   2: 66.386 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  65.786 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3225384990619 as seed for Random
359.177 ops/s
Iteration   1: 431.800 ops/s
Iteration   2: 427.958 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  429.879 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3238324511795 as seed for Random
249.805 ops/s
Iteration   1: 282.098 ops/s
Iteration   2: 281.410 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  281.754 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3251343064869 as seed for Random
355.557 ops/s
Iteration   1: 526.062 ops/s
Iteration   2: 531.227 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  528.644 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3264300069419 as seed for Random
162.594 ops/s
Iteration   1: 301.509 ops/s
Iteration   2: 289.352 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  295.431 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3277270148753 as seed for Random
44.371 ops/s
Iteration   1: 52.472 ops/s
Iteration   2: 54.146 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  53.309 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3290720255443 as seed for Random
71.438 ops/s
Iteration   1: 129.089 ops/s
Iteration   2: 131.481 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  130.285 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3303891841087 as seed for Random
155.369 ops/s
Iteration   1: 238.008 ops/s
Iteration   2: 236.135 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  237.072 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3316923548262 as seed for Random
42.599 ops/s
Iteration   1: 60.332 ops/s
Iteration   2: 59.760 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  60.046 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3330371456731 as seed for Random
171.647 ops/s
Iteration   1: 301.098 ops/s
Iteration   2: 302.022 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  301.560 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3343419308010 as seed for Random
264.563 ops/s
Iteration   1: 305.570 ops/s
Iteration   2: 314.082 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  309.826 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3356430934060 as seed for Random
49.649 ops/s
Iteration   1: 60.276 ops/s
Iteration   2: 59.495 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  59.885 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3369835179126 as seed for Random
56.874 ops/s
Iteration   1: 75.627 ops/s
Iteration   2: 72.544 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  74.086 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3383187985641 as seed for Random
265.718 ops/s
Iteration   1: 385.780 ops/s
Iteration   2: 383.560 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  384.670 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3396209491046 as seed for Random
219.641 ops/s
Iteration   1: 288.917 ops/s
Iteration   2: 292.687 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  290.802 ops/s


# Run complete. Total time: 00:06:58

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  660.321          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  483.368          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  791.115          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  607.793          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  379.264          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   45.763          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  347.122          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  398.764          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  485.362          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  561.098          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  530.827          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  355.508          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   81.355          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  509.437          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  505.837          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  324.463          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  444.162          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   65.786          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  429.879          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  281.754          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  528.644          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  295.431          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   53.309          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  130.285          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  237.072          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   60.046          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  301.560          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  309.826          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   59.885          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   74.086          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  384.670          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  290.802          ops/s
