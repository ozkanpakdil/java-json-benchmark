# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2814220742249 as seed for Random
430.788 ops/s
Iteration   1: 545.796 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  545.796 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.33% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2827327421728 as seed for Random
338.042 ops/s
Iteration   1: 460.236 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  460.236 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.67% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2840287864288 as seed for Random
461.419 ops/s
Iteration   1: 714.155 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  714.155 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 10.00% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2853246459408 as seed for Random
496.007 ops/s
Iteration   1: 560.858 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  560.858 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 13.33% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2866385000500 as seed for Random
16.900 ops/s
Iteration   1: 41.348 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  41.348 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 16.67% complete, ETA 00:05:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2880615258959 as seed for Random
306.600 ops/s
Iteration   1: 368.813 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  368.813 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 20.00% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2893677721404 as seed for Random
285.827 ops/s
Iteration   1: 370.375 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  370.375 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 23.33% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2906731297996 as seed for Random
368.550 ops/s
Iteration   1: 474.831 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  474.831 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 26.67% complete, ETA 00:04:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2919753126321 as seed for Random
420.775 ops/s
Iteration   1: 495.356 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  495.356 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 30.00% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2933230340435 as seed for Random
380.872 ops/s
Iteration   1: 501.134 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  501.134 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 33.33% complete, ETA 00:04:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2946227295347 as seed for Random
285.169 ops/s
Iteration   1: 378.846 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  378.846 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 36.67% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2959262264619 as seed for Random
36.687 ops/s
Iteration   1: 38.325 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  38.325 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.00% complete, ETA 00:03:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2973449618682 as seed for Random
429.108 ops/s
Iteration   1: 488.379 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  488.379 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.33% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2986417180147 as seed for Random
280.606 ops/s
Iteration   1: 484.501 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  484.501 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.67% complete, ETA 00:03:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2999472695725 as seed for Random
190.821 ops/s
Iteration   1: 167.115 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  167.115 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 50.00% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3012606231085 as seed for Random
132.666 ops/s
Iteration   1: 222.757 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  222.757 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 53.33% complete, ETA 00:03:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3025729695253 as seed for Random
206.416 ops/s
Iteration   1: 361.444 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  361.444 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 56.67% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3038795104294 as seed for Random
115.408 ops/s
Iteration   1: 166.823 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  166.823 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3052042828020 as seed for Random
148.113 ops/s
Iteration   1: 535.612 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  535.612 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 63.33% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3065092124075 as seed for Random
121.937 ops/s
Iteration   1: 228.534 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  228.534 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 66.67% complete, ETA 00:02:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3078251179540 as seed for Random
17.958 ops/s
Iteration   1: 42.615 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  42.615 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 70.00% complete, ETA 00:01:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3092680131115 as seed for Random
42.261 ops/s
Iteration   1: 109.497 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  109.497 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 73.33% complete, ETA 00:01:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3106030689791 as seed for Random
146.085 ops/s
Iteration   1: 211.672 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  211.672 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 76.67% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3119116294152 as seed for Random
33.280 ops/s
Iteration   1: 45.888 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  45.888 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 80.00% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3132989096051 as seed for Random
162.579 ops/s
Iteration   1: 201.558 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  201.558 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 83.33% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3146054516905 as seed for Random
179.985 ops/s
Iteration   1: 274.597 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  274.597 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 86.67% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3159131653492 as seed for Random
33.262 ops/s
Iteration   1: 53.207 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  53.207 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.00% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3172969574800 as seed for Random
31.386 ops/s
Iteration   1: 56.469 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  56.469 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.33% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3186575254563 as seed for Random
166.328 ops/s
Iteration   1: 386.111 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  386.111 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.67% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3199717906650 as seed for Random
149.794 ops/s
Iteration   1: 285.101 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  285.101 ops/s


# Run complete. Total time: 00:06:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt       545.796          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt       460.236          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt       714.155          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt       560.858          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt        41.348          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt       368.813          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt       370.375          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt       474.831          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt       495.356          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt       501.134          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt       378.846          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt        38.325          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt       488.379          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt       484.501          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt       167.115          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt       222.757          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt       361.444          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt       166.823          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt       535.612          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt       228.534          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt        42.615          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt       109.497          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt       211.672          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt        45.888          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt       201.558          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt       274.597          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt        53.207          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt        56.469          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt       386.111          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt       285.101          ops/s
