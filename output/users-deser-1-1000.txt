# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3107955814907 as seed for Random
450.372 ops/s
Iteration   1: 516.167 ops/s
Iteration   2: 531.850 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  524.009 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3121242907104 as seed for Random
321.220 ops/s
Iteration   1: 350.877 ops/s
Iteration   2: 344.355 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  347.616 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3134555719056 as seed for Random
519.424 ops/s
Iteration   1: 620.460 ops/s
Iteration   2: 630.062 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  625.261 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3147770218663 as seed for Random
424.177 ops/s
Iteration   1: 481.888 ops/s
Iteration   2: 495.539 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  488.713 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3160991770290 as seed for Random
206.873 ops/s
Iteration   1: 285.013 ops/s
Iteration   2: 286.682 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  285.847 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3174227877844 as seed for Random
11.942 ops/s
Iteration   1: 38.317 ops/s
Iteration   2: 40.893 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  39.605 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3188468905976 as seed for Random
245.055 ops/s
Iteration   1: 293.547 ops/s
Iteration   2: 302.941 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  298.244 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3201702843825 as seed for Random
217.438 ops/s
Iteration   1: 301.717 ops/s
Iteration   2: 313.703 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  307.710 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3215016431849 as seed for Random
273.744 ops/s
Iteration   1: 381.119 ops/s
Iteration   2: 382.749 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  381.934 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3228279806554 as seed for Random
366.887 ops/s
Iteration   1: 438.232 ops/s
Iteration   2: 449.048 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  443.640 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3241479034192 as seed for Random
365.088 ops/s
Iteration   1: 412.314 ops/s
Iteration   2: 439.827 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  426.070 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3254664322981 as seed for Random
218.328 ops/s
Iteration   1: 276.548 ops/s
Iteration   2: 278.897 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  277.722 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3267917495148 as seed for Random
37.962 ops/s
Iteration   1: 81.492 ops/s
Iteration   2: 79.947 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  80.719 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3281534378078 as seed for Random
305.550 ops/s
Iteration   1: 351.757 ops/s
Iteration   2: 368.810 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  360.283 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3294795813775 as seed for Random
184.444 ops/s
Iteration   1: 368.214 ops/s
Iteration   2: 366.929 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  367.571 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3308039199832 as seed for Random
220.710 ops/s
Iteration   1: 269.219 ops/s
Iteration   2: 267.515 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  268.367 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3321315433612 as seed for Random
275.319 ops/s
Iteration   1: 346.162 ops/s
Iteration   2: 339.932 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  343.047 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3334564864378 as seed for Random
42.502 ops/s
Iteration   1: 63.589 ops/s
Iteration   2: 64.399 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  63.994 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3348202198512 as seed for Random
202.792 ops/s
Iteration   1: 333.583 ops/s
Iteration   2: 328.518 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  331.051 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3361390196802 as seed for Random
188.633 ops/s
Iteration   1: 300.468 ops/s
Iteration   2: 314.318 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  307.393 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3374656614602 as seed for Random
292.909 ops/s
Iteration   1: 406.791 ops/s
Iteration   2: 411.740 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  409.265 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3388011613477 as seed for Random
150.631 ops/s
Iteration   1: 234.516 ops/s
Iteration   2: 228.638 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  231.577 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3401373082320 as seed for Random
30.315 ops/s
Iteration   1: 49.411 ops/s
Iteration   2: 50.281 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  49.846 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3415128092209 as seed for Random
57.279 ops/s
Iteration   1: 96.705 ops/s
Iteration   2: 92.207 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  94.456 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3428627158352 as seed for Random
65.274 ops/s
Iteration   1: 200.234 ops/s
Iteration   2: 186.887 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  193.561 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3441959778975 as seed for Random
29.677 ops/s
Iteration   1: 46.875 ops/s
Iteration   2: 47.856 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  47.365 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3455806418507 as seed for Random
71.277 ops/s
Iteration   1: 152.011 ops/s
Iteration   2: 217.476 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  184.743 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3469212585844 as seed for Random
168.375 ops/s
Iteration   1: 222.635 ops/s
Iteration   2: 222.359 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  222.497 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3482546509948 as seed for Random
40.456 ops/s
Iteration   1: 60.363 ops/s
Iteration   2: 59.817 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  60.090 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3496189128003 as seed for Random
31.438 ops/s
Iteration   1: 49.132 ops/s
Iteration   2: 53.016 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  51.074 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3509887357845 as seed for Random
151.109 ops/s
Iteration   1: 277.078 ops/s
Iteration   2: 273.480 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  275.279 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3523260991169 as seed for Random
159.629 ops/s
Iteration   1: 228.837 ops/s
Iteration   2: 233.970 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  231.403 ops/s


# Run complete. Total time: 00:07:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  524.009          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  347.616          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  625.261          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  488.713          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  285.847          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   39.605          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  298.244          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  307.710          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  381.934          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  443.640          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  426.070          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  277.722          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   80.719          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  360.283          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  367.571          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  268.367          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  343.047          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   63.994          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  331.051          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  307.393          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  409.265          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  231.577          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   49.846          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   94.456          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  193.561          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   47.365          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  184.743          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  222.497          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   60.090          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   51.074          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  275.279          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  231.403          ops/s
