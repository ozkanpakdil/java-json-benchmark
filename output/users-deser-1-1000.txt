# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3209929978199 as seed for Random
400.246 ops/s
Iteration   1: 507.728 ops/s
Iteration   2: 509.313 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  508.520 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3223277344729 as seed for Random
261.153 ops/s
Iteration   1: 374.988 ops/s
Iteration   2: 376.867 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  375.928 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3236619640135 as seed for Random
484.605 ops/s
Iteration   1: 565.694 ops/s
Iteration   2: 568.382 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  567.038 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3249974965987 as seed for Random
350.959 ops/s
Iteration   1: 456.888 ops/s
Iteration   2: 446.652 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  451.770 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3263350324359 as seed for Random
414.400 ops/s
Iteration   1: 582.329 ops/s
Iteration   2: 586.247 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  584.288 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3276695681254 as seed for Random
12.452 ops/s
Iteration   1: 33.004 ops/s
Iteration   2: 41.117 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  37.061 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3290938413776 as seed for Random
240.276 ops/s
Iteration   1: 293.829 ops/s
Iteration   2: 290.471 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  292.150 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3304341201632 as seed for Random
239.933 ops/s
Iteration   1: 271.371 ops/s
Iteration   2: 292.754 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  282.062 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3317781946375 as seed for Random
239.011 ops/s
Iteration   1: 353.364 ops/s
Iteration   2: 349.937 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  351.650 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3331175354029 as seed for Random
368.821 ops/s
Iteration   1: 419.216 ops/s
Iteration   2: 413.416 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  416.316 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3344572901918 as seed for Random
329.597 ops/s
Iteration   1: 390.926 ops/s
Iteration   2: 398.093 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  394.509 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3357904143924 as seed for Random
204.682 ops/s
Iteration   1: 276.402 ops/s
Iteration   2: 277.205 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  276.803 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3371310881198 as seed for Random
40.516 ops/s
Iteration   1: 53.046 ops/s
Iteration   2: 68.876 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  60.961 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3385216387145 as seed for Random
278.026 ops/s
Iteration   1: 357.891 ops/s
Iteration   2: 362.148 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  360.019 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3398555987228 as seed for Random
245.413 ops/s
Iteration   1: 382.315 ops/s
Iteration   2: 379.453 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  380.884 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3411934512308 as seed for Random
123.481 ops/s
Iteration   1: 208.600 ops/s
Iteration   2: 217.102 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  212.851 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3425376175881 as seed for Random
247.011 ops/s
Iteration   1: 307.296 ops/s
Iteration   2: 337.547 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  322.422 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3438738785714 as seed for Random
88.178 ops/s
Iteration   1: 166.073 ops/s
Iteration   2: 169.887 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  167.980 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3452178444783 as seed for Random
163.487 ops/s
Iteration   1: 294.037 ops/s
Iteration   2: 297.443 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  295.740 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3465553653748 as seed for Random
163.497 ops/s
Iteration   1: 247.591 ops/s
Iteration   2: 242.155 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  244.873 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3478910943728 as seed for Random
198.299 ops/s
Iteration   1: 358.001 ops/s
Iteration   2: 379.291 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  368.646 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jakartajson

# Run progress: 65.63% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3492203881999 as seed for Random
48.782 ops/s
Iteration   1: 140.846 ops/s
Iteration   2: 179.393 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jakartajson":
  160.119 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3505771355223 as seed for Random
23.759 ops/s
Iteration   1: 45.816 ops/s
Iteration   2: 46.419 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  46.118 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3519774069635 as seed for Random
19.200 ops/s
Iteration   1: 50.613 ops/s
Iteration   2: 86.735 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  68.674 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3533613386433 as seed for Random
87.657 ops/s
Iteration   1: 169.108 ops/s
Iteration   2: 166.118 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  167.613 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3547211050747 as seed for Random
27.498 ops/s
Iteration   1: 44.976 ops/s
Iteration   2: 43.729 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  44.353 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3561255932373 as seed for Random
39.379 ops/s
Iteration   1: 90.855 ops/s
Iteration   2: 92.200 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  91.527 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3575002103136 as seed for Random
163.952 ops/s
Iteration   1: 214.473 ops/s
Iteration   2: 226.611 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  220.542 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3588350266190 as seed for Random
39.896 ops/s
Iteration   1: 54.337 ops/s
Iteration   2: 52.662 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  53.500 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3602260168073 as seed for Random
33.134 ops/s
Iteration   1: 44.735 ops/s
Iteration   2: 45.986 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  45.360 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3616407062230 as seed for Random
162.636 ops/s
Iteration   1: 237.493 ops/s
Iteration   2: 238.978 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  238.235 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3629938476774 as seed for Random
147.161 ops/s
Iteration   1: 209.947 ops/s
Iteration   2: 217.859 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  213.903 ops/s


# Run complete. Total time: 00:07:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  508.520          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  375.928          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  567.038          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  451.770          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  584.288          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   37.061          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  292.150          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  282.062          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  351.650          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  416.316          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  394.509          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  276.803          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   60.961          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  360.019          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  380.884          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  212.851          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  322.422          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2  167.980          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  295.740          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  244.873          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  368.646          ops/s
c.g.f.j.stream.Deserialization.jakartajson            thrpt    2  160.119          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   46.118          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   68.674          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  167.613          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   44.353          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2   91.527          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  220.542          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   53.500          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   45.360          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  238.235          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  213.903          ops/s
