# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2870164556504 as seed for Random
327.708 ops/s
Iteration   1: 409.587 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  409.587 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.33% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2883469996383 as seed for Random
264.510 ops/s
Iteration   1: 368.716 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  368.716 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.67% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2896841717561 as seed for Random
128.313 ops/s
Iteration   1: 546.373 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  546.373 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 10.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2910206159607 as seed for Random
360.786 ops/s
Iteration   1: 411.320 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  411.320 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 13.33% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2923450898725 as seed for Random
17.261 ops/s
Iteration   1: 36.938 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  36.938 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 16.67% complete, ETA 00:05:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2937848002281 as seed for Random
221.356 ops/s
Iteration   1: 300.181 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  300.181 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 20.00% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2951149225948 as seed for Random
227.576 ops/s
Iteration   1: 296.973 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  296.973 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 23.33% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2964421189319 as seed for Random
257.051 ops/s
Iteration   1: 359.181 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  359.181 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 26.67% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2977759436753 as seed for Random
290.335 ops/s
Iteration   1: 419.217 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  419.217 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 30.00% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2990973804909 as seed for Random
281.371 ops/s
Iteration   1: 373.089 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  373.089 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 33.33% complete, ETA 00:04:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3004259801243 as seed for Random
218.749 ops/s
Iteration   1: 289.310 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  289.310 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 36.67% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3017584261500 as seed for Random
28.548 ops/s
Iteration   1: 70.346 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  70.346 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.00% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3031705124757 as seed for Random
284.123 ops/s
Iteration   1: 339.097 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  339.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.33% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3045020441867 as seed for Random
194.760 ops/s
Iteration   1: 353.376 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  353.376 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.67% complete, ETA 00:03:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3058337487617 as seed for Random
162.682 ops/s
Iteration   1: 240.469 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  240.469 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3071687663987 as seed for Random
87.453 ops/s
Iteration   1: 154.429 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  154.429 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 53.33% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3085081688029 as seed for Random
60.268 ops/s
Iteration   1: 163.784 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  163.784 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 56.67% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3098541890965 as seed for Random
91.074 ops/s
Iteration   1: 114.382 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  114.382 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3112108416134 as seed for Random
90.012 ops/s
Iteration   1: 92.972 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  92.972 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 63.33% complete, ETA 00:02:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3125943808779 as seed for Random
96.759 ops/s
Iteration   1: 141.680 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  141.680 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 66.67% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3139779044529 as seed for Random
23.244 ops/s
Iteration   1: 42.930 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  42.930 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 70.00% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3154012833876 as seed for Random
35.166 ops/s
Iteration   1: 86.316 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  86.316 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 73.33% complete, ETA 00:01:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3167803981558 as seed for Random
29.155 ops/s
Iteration   1: 85.113 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  85.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 76.67% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3181971451549 as seed for Random
30.232 ops/s
Iteration   1: 44.734 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  44.734 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 80.00% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3196294948432 as seed for Random
121.914 ops/s
Iteration   1: 129.844 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  129.844 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 83.33% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3209706204446 as seed for Random
111.280 ops/s
Iteration   1: 199.590 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  199.590 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 86.67% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3223180681679 as seed for Random
28.332 ops/s
Iteration   1: 45.448 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  45.448 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3237377488810 as seed for Random
21.422 ops/s
Iteration   1: 34.370 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  34.370 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.33% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3252538245862 as seed for Random
140.152 ops/s
Iteration   1: 259.247 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  259.247 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.67% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3265840290073 as seed for Random
79.773 ops/s
Iteration   1: 212.255 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  212.255 ops/s


# Run complete. Total time: 00:06:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt       409.587          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt       368.716          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt       546.373          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt       411.320          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt        36.938          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt       300.181          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt       296.973          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt       359.181          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt       419.217          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt       373.089          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt       289.310          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt        70.346          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt       339.097          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt       353.376          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt       240.469          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt       154.429          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt       163.784          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt       114.382          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt        92.972          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt       141.680          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt        42.930          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt        86.316          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt        85.113          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt        44.734          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt       129.844          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt       199.590          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt        45.448          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt        34.370          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt       259.247          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt       212.255          ops/s
