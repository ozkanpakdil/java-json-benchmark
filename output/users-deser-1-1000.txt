# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3065435579901 as seed for Random
468.743 ops/s
Iteration   1: 556.820 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  556.820 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.33% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3078434005576 as seed for Random
313.179 ops/s
Iteration   1: 451.710 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  451.710 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.67% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3091517604968 as seed for Random
505.347 ops/s
Iteration   1: 750.257 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  750.257 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 10.00% complete, ETA 00:05:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3104599153286 as seed for Random
510.000 ops/s
Iteration   1: 563.285 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  563.285 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 13.33% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3117599354805 as seed for Random
20.789 ops/s
Iteration   1: 37.685 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  37.685 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 16.67% complete, ETA 00:05:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3131694804876 as seed for Random
293.891 ops/s
Iteration   1: 349.505 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  349.505 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 20.00% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3144713503782 as seed for Random
292.476 ops/s
Iteration   1: 372.317 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  372.317 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 23.33% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3157809134696 as seed for Random
286.015 ops/s
Iteration   1: 427.657 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  427.657 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 26.67% complete, ETA 00:04:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3170909070048 as seed for Random
435.494 ops/s
Iteration   1: 533.770 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  533.770 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 30.00% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3183896824141 as seed for Random
415.882 ops/s
Iteration   1: 505.394 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  505.394 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 33.33% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3196890097783 as seed for Random
243.508 ops/s
Iteration   1: 328.823 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  328.823 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 36.67% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3209934562712 as seed for Random
35.844 ops/s
Iteration   1: 51.270 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  51.270 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.00% complete, ETA 00:03:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3224218262063 as seed for Random
391.681 ops/s
Iteration   1: 476.467 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  476.467 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.33% complete, ETA 00:03:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3237242860792 as seed for Random
269.060 ops/s
Iteration   1: 443.803 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  443.803 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.67% complete, ETA 00:03:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3250249062907 as seed for Random
200.787 ops/s
Iteration   1: 260.119 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  260.119 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 50.00% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3263377658985 as seed for Random
113.515 ops/s
Iteration   1: 224.955 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  224.955 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 53.33% complete, ETA 00:03:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3276560577991 as seed for Random
217.081 ops/s
Iteration   1: 402.428 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  402.428 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 56.67% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3289753000196 as seed for Random
113.550 ops/s
Iteration   1: 238.272 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  238.272 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3302931027722 as seed for Random
167.768 ops/s
Iteration   1: 520.505 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  520.505 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 63.33% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3315954318428 as seed for Random
125.004 ops/s
Iteration   1: 218.167 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  218.167 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 66.67% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3329382920823 as seed for Random
26.495 ops/s
Iteration   1: 46.155 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  46.155 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 70.00% complete, ETA 00:01:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3343476143194 as seed for Random
58.332 ops/s
Iteration   1: 127.260 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  127.260 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 73.33% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3356777029241 as seed for Random
139.938 ops/s
Iteration   1: 212.774 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  212.774 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 76.67% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3370002283837 as seed for Random
33.642 ops/s
Iteration   1: 45.404 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  45.404 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 80.00% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3384126724622 as seed for Random
43.746 ops/s
Iteration   1: 216.299 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  216.299 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 83.33% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3397295361422 as seed for Random
197.037 ops/s
Iteration   1: 237.678 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  237.678 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 86.67% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3410454010299 as seed for Random
30.847 ops/s
Iteration   1: 52.524 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  52.524 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.00% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3424312484129 as seed for Random
27.331 ops/s
Iteration   1: 49.245 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  49.245 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.33% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3438483662895 as seed for Random
244.869 ops/s
Iteration   1: 368.162 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  368.162 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.67% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3451592192042 as seed for Random
142.198 ops/s
Iteration   1: 256.440 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  256.440 ops/s


# Run complete. Total time: 00:06:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt       556.820          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt       451.710          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt       750.257          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt       563.285          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt        37.685          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt       349.505          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt       372.317          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt       427.657          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt       533.770          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt       505.394          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt       328.823          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt        51.270          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt       476.467          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt       443.803          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt       260.119          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt       224.955          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt       402.428          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt       238.272          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt       520.505          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt       218.167          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt        46.155          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt       127.260          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt       212.774          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt        45.404          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt       216.299          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt       237.678          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt        52.524          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt        49.245          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt       368.162          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt       256.440          ops/s
