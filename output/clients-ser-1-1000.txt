# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4754601603527 as seed for Random
270.198 ops/s
Iteration   1: 318.842 ops/s
Iteration   2: 308.453 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  313.647 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4768097964442 as seed for Random
186.974 ops/s
Iteration   1: 270.905 ops/s
Iteration   2: 276.528 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  273.717 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4781627368374 as seed for Random
617.629 ops/s
Iteration   1: 830.932 ops/s
Iteration   2: 806.986 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  818.959 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4795046508383 as seed for Random
575.688 ops/s
Iteration   1: 649.492 ops/s
Iteration   2: 648.064 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  648.778 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4808455291982 as seed for Random
100.733 ops/s
Iteration   1: 132.431 ops/s
Iteration   2: 133.333 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  132.882 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4822103523037 as seed for Random
25.661 ops/s
Iteration   1: 27.304 ops/s
Iteration   2: 25.641 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  26.473 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4836844797359 as seed for Random
73.532 ops/s
Iteration   1: 213.856 ops/s
Iteration   2: 216.702 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  215.279 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4850368073576 as seed for Random
103.702 ops/s
Iteration   1: 200.261 ops/s
Iteration   2: 203.693 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  201.977 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4863889916517 as seed for Random
150.068 ops/s
Iteration   1: 207.638 ops/s
Iteration   2: 206.395 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  207.016 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4877377383050 as seed for Random
109.868 ops/s
Iteration   1: 211.450 ops/s
Iteration   2: 218.053 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  214.751 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4890911029011 as seed for Random
129.288 ops/s
Iteration   1: 211.772 ops/s
Iteration   2: 214.325 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  213.048 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4904405002230 as seed for Random
29.686 ops/s
Iteration   1: 53.075 ops/s
Iteration   2: 46.214 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  49.644 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4918374269145 as seed for Random
202.169 ops/s
Iteration   1: 278.805 ops/s
Iteration   2: 290.737 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  284.771 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4931844670311 as seed for Random
74.737 ops/s
Iteration   1: 173.998 ops/s
Iteration   2: 185.130 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  179.564 ops/s


# Run complete. Total time: 00:03:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.avajejsonb           thrpt    2  313.647          ops/s
Serialization.avajejsonb_jackson   thrpt    2  273.717          ops/s
Serialization.dsljson              thrpt    2  818.959          ops/s
Serialization.dsljson_reflection   thrpt    2  648.778          ops/s
Serialization.fastjson             thrpt    2  132.882          ops/s
Serialization.flexjson             thrpt    2   26.473          ops/s
Serialization.genson               thrpt    2  215.279          ops/s
Serialization.gson                 thrpt    2  201.977          ops/s
Serialization.jackson              thrpt    2  207.016          ops/s
Serialization.jackson_afterburner  thrpt    2  214.751          ops/s
Serialization.jackson_blackbird    thrpt    2  213.048          ops/s
Serialization.jodd                 thrpt    2   49.644          ops/s
Serialization.logansquare          thrpt    2  284.771          ops/s
Serialization.moshi                thrpt    2  179.564          ops/s
