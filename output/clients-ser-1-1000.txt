# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4436412878781 as seed for Random
181.380 ops/s
Iteration   1: 322.275 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  322.275 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.69% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4449774407463 as seed for Random
213.047 ops/s
Iteration   1: 297.050 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  297.050 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 15.38% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4463095631022 as seed for Random
834.868 ops/s
Iteration   1: 974.003 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  974.003 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 23.08% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4476409650624 as seed for Random
654.839 ops/s
Iteration   1: 708.702 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  708.702 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 30.77% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4489722511669 as seed for Random
23.935 ops/s
Iteration   1: 39.471 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  39.471 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 38.46% complete, ETA 00:01:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4504325531988 as seed for Random
201.513 ops/s
Iteration   1: 259.088 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  259.088 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 46.15% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4517614864299 as seed for Random
124.766 ops/s
Iteration   1: 210.080 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  210.080 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 53.85% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4531006759265 as seed for Random
176.825 ops/s
Iteration   1: 237.418 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  237.418 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 61.54% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4544378667474 as seed for Random
155.287 ops/s
Iteration   1: 241.082 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  241.082 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 69.23% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4557779658528 as seed for Random
186.349 ops/s
Iteration   1: 236.088 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  236.088 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 76.92% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4571125979031 as seed for Random
44.505 ops/s
Iteration   1: 61.022 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  61.022 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 84.62% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4584979926056 as seed for Random
252.086 ops/s
Iteration   1: 337.345 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  337.345 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.31% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4598288397458 as seed for Random
142.667 ops/s
Iteration   1: 216.711 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  216.711 ops/s


# Run complete. Total time: 00:02:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.avajejsonb           thrpt       322.275          ops/s
Serialization.avajejsonb_jackson   thrpt       297.050          ops/s
Serialization.dsljson              thrpt       974.003          ops/s
Serialization.dsljson_reflection   thrpt       708.702          ops/s
Serialization.flexjson             thrpt        39.471          ops/s
Serialization.genson               thrpt       259.088          ops/s
Serialization.gson                 thrpt       210.080          ops/s
Serialization.jackson              thrpt       237.418          ops/s
Serialization.jackson_afterburner  thrpt       241.082          ops/s
Serialization.jackson_blackbird    thrpt       236.088          ops/s
Serialization.jodd                 thrpt        61.022          ops/s
Serialization.logansquare          thrpt       337.345          ops/s
Serialization.moshi                thrpt       216.711          ops/s
