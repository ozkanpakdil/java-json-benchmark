# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4728335168469 as seed for Random
269.574 ops/s
Iteration   1: 320.408 ops/s
Iteration   2: 318.889 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  319.648 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4741831627812 as seed for Random
234.982 ops/s
Iteration   1: 284.669 ops/s
Iteration   2: 282.947 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  283.808 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4755455558916 as seed for Random
780.441 ops/s
Iteration   1: 927.064 ops/s
Iteration   2: 900.657 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  913.861 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4768985387683 as seed for Random
578.817 ops/s
Iteration   1: 633.650 ops/s
Iteration   2: 641.593 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  637.622 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4782465214648 as seed for Random
298.752 ops/s
Iteration   1: 398.380 ops/s
Iteration   2: 385.873 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  392.126 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4795904921689 as seed for Random
25.846 ops/s
Iteration   1: 25.939 ops/s
Iteration   2: 24.187 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  25.063 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4810766296064 as seed for Random
93.361 ops/s
Iteration   1: 227.671 ops/s
Iteration   2: 234.324 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  230.998 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4824250075390 as seed for Random
164.559 ops/s
Iteration   1: 217.432 ops/s
Iteration   2: 216.553 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  216.993 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4837784427427 as seed for Random
141.907 ops/s
Iteration   1: 207.628 ops/s
Iteration   2: 213.790 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  210.709 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4851342695269 as seed for Random
146.528 ops/s
Iteration   1: 220.924 ops/s
Iteration   2: 216.473 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  218.698 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4864888304595 as seed for Random
141.360 ops/s
Iteration   1: 204.569 ops/s
Iteration   2: 209.674 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  207.121 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4878423425178 as seed for Random
27.410 ops/s
Iteration   1: 42.596 ops/s
Iteration   2: 43.903 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  43.249 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4892617726872 as seed for Random
188.239 ops/s
Iteration   1: 274.582 ops/s
Iteration   2: 284.174 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  279.378 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4906187446628 as seed for Random
54.653 ops/s
Iteration   1: 68.807 ops/s
Iteration   2: 79.601 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  74.204 ops/s


# Run complete. Total time: 00:03:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.avajejsonb           thrpt    2  319.648          ops/s
Serialization.avajejsonb_jackson   thrpt    2  283.808          ops/s
Serialization.dsljson              thrpt    2  913.861          ops/s
Serialization.dsljson_reflection   thrpt    2  637.622          ops/s
Serialization.fastjson             thrpt    2  392.126          ops/s
Serialization.flexjson             thrpt    2   25.063          ops/s
Serialization.genson               thrpt    2  230.998          ops/s
Serialization.gson                 thrpt    2  216.993          ops/s
Serialization.jackson              thrpt    2  210.709          ops/s
Serialization.jackson_afterburner  thrpt    2  218.698          ops/s
Serialization.jackson_blackbird    thrpt    2  207.121          ops/s
Serialization.jodd                 thrpt    2   43.249          ops/s
Serialization.logansquare          thrpt    2  279.378          ops/s
Serialization.moshi                thrpt    2   74.204          ops/s
