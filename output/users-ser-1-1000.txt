# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2758615284047 as seed for Random
731.647 ops/s
Iteration   1: 786.230 ops/s
Iteration   2: 778.248 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  782.239 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2771613736824 as seed for Random
597.742 ops/s
Iteration   1: 652.215 ops/s
Iteration   2: 635.573 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  643.894 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2784603173692 as seed for Random
919.241 ops/s
Iteration   1: 988.012 ops/s
Iteration   2: 993.989 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  991.000 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2797577670396 as seed for Random
746.055 ops/s
Iteration   1: 788.177 ops/s
Iteration   2: 788.554 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  788.365 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2810575049696 as seed for Random
216.203 ops/s
Iteration   1: 250.414 ops/s
Iteration   2: 243.931 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  247.173 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2823680472509 as seed for Random
29.905 ops/s
Iteration   1: 25.545 ops/s
Iteration   2: 23.373 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  24.459 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2838083581247 as seed for Random
298.428 ops/s
Iteration   1: 438.078 ops/s
Iteration   2: 441.255 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  439.667 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2851047110080 as seed for Random
381.961 ops/s
Iteration   1: 416.307 ops/s
Iteration   2: 412.156 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  414.231 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2864061339648 as seed for Random
537.173 ops/s
Iteration   1: 632.375 ops/s
Iteration   2: 618.150 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  625.262 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2877074039473 as seed for Random
535.918 ops/s
Iteration   1: 647.388 ops/s
Iteration   2: 643.725 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  645.557 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2890050032412 as seed for Random
517.407 ops/s
Iteration   1: 641.055 ops/s
Iteration   2: 650.150 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  645.602 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2903039950676 as seed for Random
62.042 ops/s
Iteration   1: 69.111 ops/s
Iteration   2: 68.284 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  68.698 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2916350501367 as seed for Random
187.533 ops/s
Iteration   1: 219.423 ops/s
Iteration   2: 218.790 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  219.106 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2929446794613 as seed for Random
199.488 ops/s
Iteration   1: 221.459 ops/s
Iteration   2: 219.869 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  220.664 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2942560760400 as seed for Random
559.986 ops/s
Iteration   1: 685.523 ops/s
Iteration   2: 679.792 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  682.657 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2955532948084 as seed for Random
252.297 ops/s
Iteration   1: 370.514 ops/s
Iteration   2: 367.748 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  369.131 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2968570071340 as seed for Random
364.529 ops/s
Iteration   1: 427.577 ops/s
Iteration   2: 426.648 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  427.112 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2981572673412 as seed for Random
221.532 ops/s
Iteration   1: 272.039 ops/s
Iteration   2: 276.833 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  274.436 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2994600320842 as seed for Random
361.314 ops/s
Iteration   1: 483.590 ops/s
Iteration   2: 484.764 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  484.177 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3007618926179 as seed for Random
122.193 ops/s
Iteration   1: 134.969 ops/s
Iteration   2: 134.737 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  134.853 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3020847621796 as seed for Random
543.242 ops/s
Iteration   1: 635.191 ops/s
Iteration   2: 631.254 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  633.223 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3033847026016 as seed for Random
570.503 ops/s
Iteration   1: 670.254 ops/s
Iteration   2: 676.517 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  673.385 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3046838632772 as seed for Random
55.552 ops/s
Iteration   1: 64.536 ops/s
Iteration   2: 66.438 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  65.487 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3060256698317 as seed for Random
58.326 ops/s
Iteration   1: 71.377 ops/s
Iteration   2: 71.388 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  71.383 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3073665908901 as seed for Random
218.275 ops/s
Iteration   1: 262.229 ops/s
Iteration   2: 261.412 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  261.820 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3086697207729 as seed for Random
75.119 ops/s
Iteration   1: 95.446 ops/s
Iteration   2: 95.721 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  95.583 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3100004777886 as seed for Random
286.334 ops/s
Iteration   1: 379.280 ops/s
Iteration   2: 377.203 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  378.241 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3113048449456 as seed for Random
231.910 ops/s
Iteration   1: 251.499 ops/s
Iteration   2: 252.345 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  251.922 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3126139600614 as seed for Random
51.697 ops/s
Iteration   1: 84.084 ops/s
Iteration   2: 86.259 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  85.172 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3139501951346 as seed for Random
16.136 ops/s
Iteration   1: 14.992 ops/s
Iteration   2: 17.131 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  16.061 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3154858190432 as seed for Random
39.084 ops/s
Iteration   1: 48.727 ops/s
Iteration   2: 49.206 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  48.967 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3168536364347 as seed for Random
9.114 ops/s
Iteration   1: 11.108 ops/s
Iteration   2: 11.003 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  11.055 ops/s


# Run complete. Total time: 00:07:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  782.239          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  643.894          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  991.000          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  788.365          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  247.173          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2   24.459          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  439.667          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  414.231          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  625.262          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  645.557          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  645.602          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   68.698          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  219.106          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  220.664          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  682.657          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  369.131          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  427.112          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  274.436          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  484.177          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  134.853          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  633.223          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  673.385          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   65.487          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   71.383          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  261.820          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   95.583          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  378.241          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  251.922          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   85.172          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   16.061          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   48.967          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   11.055          ops/s
