# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2846737289757 as seed for Random
361.126 ops/s
Iteration   1: 356.108 ops/s
Iteration   2: 368.409 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  362.259 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2859891442414 as seed for Random
274.880 ops/s
Iteration   1: 278.625 ops/s
Iteration   2: 281.623 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  280.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2873012942667 as seed for Random
404.478 ops/s
Iteration   1: 408.811 ops/s
Iteration   2: 384.873 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  396.842 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2886135797271 as seed for Random
329.522 ops/s
Iteration   1: 340.121 ops/s
Iteration   2: 349.287 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  344.704 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2899308423103 as seed for Random
96.465 ops/s
Iteration   1: 104.091 ops/s
Iteration   2: 110.002 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  107.046 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2912444063108 as seed for Random
9.511 ops/s
Iteration   1: 5.579 ops/s
Iteration   2: 5.230 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  5.405 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2925991878043 as seed for Random
190.057 ops/s
Iteration   1: 206.488 ops/s
Iteration   2: 195.543 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  201.016 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2939194573133 as seed for Random
165.693 ops/s
Iteration   1: 168.511 ops/s
Iteration   2: 167.899 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  168.205 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2952336238210 as seed for Random
265.052 ops/s
Iteration   1: 277.302 ops/s
Iteration   2: 276.479 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  276.890 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2965451131948 as seed for Random
269.406 ops/s
Iteration   1: 262.999 ops/s
Iteration   2: 273.256 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  268.127 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2978579288301 as seed for Random
250.220 ops/s
Iteration   1: 257.258 ops/s
Iteration   2: 256.850 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  257.054 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2991751180737 as seed for Random
26.522 ops/s
Iteration   1: 27.864 ops/s
Iteration   2: 28.140 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  28.002 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3004916107847 as seed for Random
85.054 ops/s
Iteration   1: 85.892 ops/s
Iteration   2: 91.441 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  88.667 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3018076116128 as seed for Random
91.004 ops/s
Iteration   1: 90.124 ops/s
Iteration   2: 95.314 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  92.719 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3031197538675 as seed for Random
277.424 ops/s
Iteration   1: 284.340 ops/s
Iteration   2: 289.341 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  286.840 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3044315088804 as seed for Random
150.093 ops/s
Iteration   1: 154.160 ops/s
Iteration   2: 155.231 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  154.695 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3057453138203 as seed for Random
185.434 ops/s
Iteration   1: 188.390 ops/s
Iteration   2: 189.042 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  188.716 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3070572612875 as seed for Random
99.910 ops/s
Iteration   1: 110.857 ops/s
Iteration   2: 111.337 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  111.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3083705861736 as seed for Random
171.370 ops/s
Iteration   1: 185.974 ops/s
Iteration   2: 183.745 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  184.859 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3096833095260 as seed for Random
46.660 ops/s
Iteration   1: 49.718 ops/s
Iteration   2: 48.610 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  49.164 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3109985858037 as seed for Random
248.329 ops/s
Iteration   1: 249.182 ops/s
Iteration   2: 251.608 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  250.395 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3123124024248 as seed for Random
284.953 ops/s
Iteration   1: 289.765 ops/s
Iteration   2: 290.317 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  290.041 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3136279476989 as seed for Random
24.401 ops/s
Iteration   1: 25.092 ops/s
Iteration   2: 24.248 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  24.670 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3149546121572 as seed for Random
20.464 ops/s
Iteration   1: 21.822 ops/s
Iteration   2: 21.871 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  21.846 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3162746209429 as seed for Random
103.836 ops/s
Iteration   1: 110.640 ops/s
Iteration   2: 111.158 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  110.899 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3175931132853 as seed for Random
35.124 ops/s
Iteration   1: 37.568 ops/s
Iteration   2: 38.392 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  37.980 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3189127393938 as seed for Random
155.327 ops/s
Iteration   1: 157.765 ops/s
Iteration   2: 159.257 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  158.511 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3202308353078 as seed for Random
101.506 ops/s
Iteration   1: 102.505 ops/s
Iteration   2: 104.414 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  103.460 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3215487307433 as seed for Random
31.385 ops/s
Iteration   1: 34.207 ops/s
Iteration   2: 35.296 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  34.751 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3228732182610 as seed for Random
9.141 ops/s
Iteration   1: 9.834 ops/s
Iteration   2: 9.960 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  9.897 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3242004979459 as seed for Random
18.819 ops/s
Iteration   1: 20.629 ops/s
Iteration   2: 20.284 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  20.456 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3255209022184 as seed for Random
5.817 ops/s
Iteration   1: 6.320 ops/s
Iteration   2: 6.821 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  6.571 ops/s


# Run complete. Total time: 00:07:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  362.259          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  280.124          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  396.842          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  344.704          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  107.046          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    5.405          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  201.016          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  168.205          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  276.890          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  268.127          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  257.054          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   28.002          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2   88.667          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2   92.719          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  286.840          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  154.695          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  188.716          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  111.097          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  184.859          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2   49.164          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  250.395          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  290.041          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   24.670          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   21.846          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  110.899          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   37.980          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  158.511          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  103.460          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   34.751          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2    9.897          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   20.456          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2    6.571          ops/s
