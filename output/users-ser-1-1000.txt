# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2669536703891 as seed for Random
658.881 ops/s
Iteration   1: 657.020 ops/s
Iteration   2: 665.323 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  661.171 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2682919947896 as seed for Random
462.768 ops/s
Iteration   1: 555.766 ops/s
Iteration   2: 539.009 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  547.388 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2696127339672 as seed for Random
674.961 ops/s
Iteration   1: 733.457 ops/s
Iteration   2: 771.222 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  752.340 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2709349409473 as seed for Random
616.506 ops/s
Iteration   1: 636.027 ops/s
Iteration   2: 636.318 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  636.173 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2722596786960 as seed for Random
184.287 ops/s
Iteration   1: 211.723 ops/s
Iteration   2: 211.035 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  211.379 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2735926894673 as seed for Random
26.871 ops/s
Iteration   1: 26.074 ops/s
Iteration   2: 24.012 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  25.043 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2750474324106 as seed for Random
249.107 ops/s
Iteration   1: 353.880 ops/s
Iteration   2: 361.015 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  357.448 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2763795951367 as seed for Random
282.248 ops/s
Iteration   1: 317.581 ops/s
Iteration   2: 304.156 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  310.868 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2777073321940 as seed for Random
387.213 ops/s
Iteration   1: 489.786 ops/s
Iteration   2: 483.399 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  486.593 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2790331404480 as seed for Random
376.560 ops/s
Iteration   1: 519.677 ops/s
Iteration   2: 503.519 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  511.598 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2803624573890 as seed for Random
417.178 ops/s
Iteration   1: 518.193 ops/s
Iteration   2: 514.783 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  516.488 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2816811475485 as seed for Random
53.560 ops/s
Iteration   1: 61.600 ops/s
Iteration   2: 61.213 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  61.406 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2830446584879 as seed for Random
158.497 ops/s
Iteration   1: 195.367 ops/s
Iteration   2: 186.429 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  190.898 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2843813636166 as seed for Random
175.298 ops/s
Iteration   1: 191.722 ops/s
Iteration   2: 187.394 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  189.558 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2857105192474 as seed for Random
399.408 ops/s
Iteration   1: 583.063 ops/s
Iteration   2: 566.642 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  574.853 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2870348541957 as seed for Random
115.127 ops/s
Iteration   1: 297.400 ops/s
Iteration   2: 285.920 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  291.660 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2883600557742 as seed for Random
288.819 ops/s
Iteration   1: 323.362 ops/s
Iteration   2: 314.409 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  318.885 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2896896757183 as seed for Random
105.101 ops/s
Iteration   1: 207.099 ops/s
Iteration   2: 211.148 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  209.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2910173039031 as seed for Random
270.938 ops/s
Iteration   1: 350.988 ops/s
Iteration   2: 344.263 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  347.625 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2923456893196 as seed for Random
88.076 ops/s
Iteration   1: 107.462 ops/s
Iteration   2: 105.326 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  106.394 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2936883779404 as seed for Random
468.274 ops/s
Iteration   1: 574.963 ops/s
Iteration   2: 552.721 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  563.842 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2950105946707 as seed for Random
444.615 ops/s
Iteration   1: 590.490 ops/s
Iteration   2: 562.587 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  576.539 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2963330494461 as seed for Random
41.073 ops/s
Iteration   1: 52.373 ops/s
Iteration   2: 52.336 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  52.354 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2977104479713 as seed for Random
36.130 ops/s
Iteration   1: 44.363 ops/s
Iteration   2: 44.307 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  44.335 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2991061835698 as seed for Random
181.331 ops/s
Iteration   1: 219.692 ops/s
Iteration   2: 211.015 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  215.353 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3004417743602 as seed for Random
55.915 ops/s
Iteration   1: 71.683 ops/s
Iteration   2: 72.026 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  71.854 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3018067332040 as seed for Random
212.125 ops/s
Iteration   1: 310.211 ops/s
Iteration   2: 313.632 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  311.921 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3031282833038 as seed for Random
180.856 ops/s
Iteration   1: 189.114 ops/s
Iteration   2: 189.377 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  189.245 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3044628986641 as seed for Random
20.794 ops/s
Iteration   1: 55.453 ops/s
Iteration   2: 69.370 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  62.411 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3058418260336 as seed for Random
11.933 ops/s
Iteration   1: 15.910 ops/s
Iteration   2: 11.647 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  13.778 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3074835374016 as seed for Random
27.515 ops/s
Iteration   1: 36.686 ops/s
Iteration   2: 37.982 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  37.334 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3088738253870 as seed for Random
6.796 ops/s
Iteration   1: 7.438 ops/s
Iteration   2: 6.659 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  7.049 ops/s


# Run complete. Total time: 00:07:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  661.171          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  547.388          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  752.340          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  636.173          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  211.379          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2   25.043          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  357.448          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  310.868          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  486.593          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  511.598          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  516.488          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   61.406          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  190.898          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  189.558          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  574.853          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  291.660          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  318.885          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  209.124          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  347.625          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  106.394          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  563.842          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  576.539          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   52.354          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   44.335          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  215.353          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   71.854          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  311.921          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  189.245          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   62.411          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   13.778          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   37.334          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2    7.049          ops/s
