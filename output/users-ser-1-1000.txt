# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2765933239983 as seed for Random
616.650 ops/s
Iteration   1: 675.369 ops/s
Iteration   2: 680.098 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  677.734 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2779190058980 as seed for Random
449.707 ops/s
Iteration   1: 551.427 ops/s
Iteration   2: 542.504 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  546.965 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2792426765079 as seed for Random
693.636 ops/s
Iteration   1: 773.238 ops/s
Iteration   2: 799.329 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  786.284 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2805642977352 as seed for Random
594.923 ops/s
Iteration   1: 639.796 ops/s
Iteration   2: 610.568 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  625.182 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2818916672974 as seed for Random
159.075 ops/s
Iteration   1: 197.950 ops/s
Iteration   2: 202.388 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  200.169 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2832330270077 as seed for Random
25.497 ops/s
Iteration   1: 25.489 ops/s
Iteration   2: 23.264 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  24.376 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2847024894363 as seed for Random
200.663 ops/s
Iteration   1: 320.723 ops/s
Iteration   2: 315.564 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  318.144 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2860373844792 as seed for Random
294.513 ops/s
Iteration   1: 303.382 ops/s
Iteration   2: 327.586 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  315.484 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2873695988595 as seed for Random
406.228 ops/s
Iteration   1: 536.411 ops/s
Iteration   2: 525.938 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  531.175 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2886964146946 as seed for Random
254.942 ops/s
Iteration   1: 478.315 ops/s
Iteration   2: 516.090 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  497.203 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2900247074949 as seed for Random
392.226 ops/s
Iteration   1: 513.517 ops/s
Iteration   2: 507.013 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  510.265 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2913522728049 as seed for Random
48.520 ops/s
Iteration   1: 54.772 ops/s
Iteration   2: 56.247 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  55.510 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2927355955453 as seed for Random
145.684 ops/s
Iteration   1: 180.454 ops/s
Iteration   2: 185.446 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  182.950 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2940725468314 as seed for Random
166.636 ops/s
Iteration   1: 190.786 ops/s
Iteration   2: 180.066 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  185.426 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2954042958445 as seed for Random
316.300 ops/s
Iteration   1: 547.008 ops/s
Iteration   2: 564.353 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  555.681 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2967340864271 as seed for Random
253.976 ops/s
Iteration   1: 296.016 ops/s
Iteration   2: 291.167 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  293.592 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2980663062885 as seed for Random
310.747 ops/s
Iteration   1: 384.665 ops/s
Iteration   2: 380.787 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  382.726 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2993958819641 as seed for Random
55.683 ops/s
Iteration   1: 209.045 ops/s
Iteration   2: 204.404 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  206.725 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3007365985139 as seed for Random
255.619 ops/s
Iteration   1: 366.338 ops/s
Iteration   2: 359.008 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  362.673 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3020707283270 as seed for Random
90.605 ops/s
Iteration   1: 114.502 ops/s
Iteration   2: 109.665 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  112.083 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3034204123011 as seed for Random
419.873 ops/s
Iteration   1: 524.233 ops/s
Iteration   2: 539.419 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  531.826 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3047435542822 as seed for Random
413.148 ops/s
Iteration   1: 536.198 ops/s
Iteration   2: 561.929 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  549.064 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3060699201564 as seed for Random
36.481 ops/s
Iteration   1: 46.643 ops/s
Iteration   2: 50.690 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  48.667 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3074681682301 as seed for Random
49.030 ops/s
Iteration   1: 60.923 ops/s
Iteration   2: 61.440 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  61.182 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3088452111896 as seed for Random
154.896 ops/s
Iteration   1: 213.867 ops/s
Iteration   2: 209.936 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  211.902 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3101796079832 as seed for Random
45.386 ops/s
Iteration   1: 64.234 ops/s
Iteration   2: 63.902 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  64.068 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3115624244867 as seed for Random
85.818 ops/s
Iteration   1: 290.311 ops/s
Iteration   2: 298.281 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  294.296 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3128943895595 as seed for Random
108.692 ops/s
Iteration   1: 182.932 ops/s
Iteration   2: 178.529 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  180.731 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3142342401831 as seed for Random
28.862 ops/s
Iteration   1: 68.341 ops/s
Iteration   2: 69.364 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  68.852 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3156052071938 as seed for Random
13.218 ops/s
Iteration   1: 12.597 ops/s
Iteration   2: 10.691 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  11.644 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3172090456498 as seed for Random
24.805 ops/s
Iteration   1: 36.271 ops/s
Iteration   2: 34.756 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  35.514 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3186202275841 as seed for Random
6.851 ops/s
Iteration   1: 5.815 ops/s
Iteration   2: 7.571 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  6.693 ops/s


# Run complete. Total time: 00:07:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  677.734          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  546.965          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  786.284          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  625.182          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  200.169          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2   24.376          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  318.144          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  315.484          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  531.175          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  497.203          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  510.265          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   55.510          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  182.950          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  185.426          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  555.681          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  293.592          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  382.726          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  206.725          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  362.673          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  112.083          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  531.826          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  549.064          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   48.667          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   61.182          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  211.902          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   64.068          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  294.296          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  180.731          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   68.852          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   11.644          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   35.514          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2    6.693          ops/s
