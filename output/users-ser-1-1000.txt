# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2765254591654 as seed for Random
613.848 ops/s
Iteration   1: 635.753 ops/s
Iteration   2: 650.287 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  643.020 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2778575633607 as seed for Random
483.546 ops/s
Iteration   1: 549.591 ops/s
Iteration   2: 530.978 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  540.284 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2791948447475 as seed for Random
710.414 ops/s
Iteration   1: 755.707 ops/s
Iteration   2: 788.774 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  772.240 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2805261982865 as seed for Random
595.986 ops/s
Iteration   1: 642.576 ops/s
Iteration   2: 647.081 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  644.828 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2818605821192 as seed for Random
333.777 ops/s
Iteration   1: 392.121 ops/s
Iteration   2: 381.355 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  386.738 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2831906972822 as seed for Random
24.777 ops/s
Iteration   1: 23.562 ops/s
Iteration   2: 21.522 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  22.542 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2846777841821 as seed for Random
273.553 ops/s
Iteration   1: 372.522 ops/s
Iteration   2: 374.847 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  373.684 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2860085702108 as seed for Random
291.730 ops/s
Iteration   1: 318.612 ops/s
Iteration   2: 322.168 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  320.390 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2873491774786 as seed for Random
385.043 ops/s
Iteration   1: 458.751 ops/s
Iteration   2: 477.431 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  468.091 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2886840651878 as seed for Random
381.741 ops/s
Iteration   1: 521.863 ops/s
Iteration   2: 500.263 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  511.063 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2900169423061 as seed for Random
340.807 ops/s
Iteration   1: 490.657 ops/s
Iteration   2: 488.109 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  489.383 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2913416376839 as seed for Random
44.145 ops/s
Iteration   1: 55.496 ops/s
Iteration   2: 57.320 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  56.408 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2927215865726 as seed for Random
150.939 ops/s
Iteration   1: 189.202 ops/s
Iteration   2: 188.958 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  189.080 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2940582889376 as seed for Random
168.195 ops/s
Iteration   1: 186.457 ops/s
Iteration   2: 181.856 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  184.156 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2953934659172 as seed for Random
393.155 ops/s
Iteration   1: 512.491 ops/s
Iteration   2: 464.024 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  488.258 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2967307079143 as seed for Random
223.199 ops/s
Iteration   1: 285.817 ops/s
Iteration   2: 276.595 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  281.206 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2980667698150 as seed for Random
207.819 ops/s
Iteration   1: 345.263 ops/s
Iteration   2: 353.349 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  349.306 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2994029604820 as seed for Random
194.846 ops/s
Iteration   1: 251.739 ops/s
Iteration   2: 242.903 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  247.321 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3007380826943 as seed for Random
257.186 ops/s
Iteration   1: 346.585 ops/s
Iteration   2: 361.877 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  354.231 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3020735243123 as seed for Random
76.481 ops/s
Iteration   1: 102.605 ops/s
Iteration   2: 100.345 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  101.475 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3034208704389 as seed for Random
420.659 ops/s
Iteration   1: 508.830 ops/s
Iteration   2: 528.416 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  518.623 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jakartajson

# Run progress: 65.63% complete, ETA 00:02:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3047471771328 as seed for Random
435.520 ops/s
Iteration   1: 513.917 ops/s
Iteration   2: 498.009 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jakartajson":
  505.963 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3060851059866 as seed for Random
35.863 ops/s
Iteration   1: 46.031 ops/s
Iteration   2: 50.008 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  48.020 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3075015107996 as seed for Random
51.647 ops/s
Iteration   1: 64.940 ops/s
Iteration   2: 61.603 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  63.271 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3088939054713 as seed for Random
120.178 ops/s
Iteration   1: 207.830 ops/s
Iteration   2: 214.112 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  210.971 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3102417303849 as seed for Random
52.662 ops/s
Iteration   1: 70.525 ops/s
Iteration   2: 69.138 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  69.832 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3116322550678 as seed for Random
224.118 ops/s
Iteration   1: 313.719 ops/s
Iteration   2: 306.314 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  310.017 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3129650551157 as seed for Random
180.769 ops/s
Iteration   1: 211.454 ops/s
Iteration   2: 210.636 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  211.045 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3143037976378 as seed for Random
50.301 ops/s
Iteration   1: 66.507 ops/s
Iteration   2: 66.432 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  66.469 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3156815752096 as seed for Random
7.594 ops/s
Iteration   1: 8.790 ops/s
Iteration   2: 6.931 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  7.861 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3175102624789 as seed for Random
27.847 ops/s
Iteration   1: 37.725 ops/s
Iteration   2: 37.684 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  37.705 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3189140498885 as seed for Random
5.865 ops/s
Iteration   1: 7.015 ops/s
Iteration   2: 7.037 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  7.026 ops/s


# Run complete. Total time: 00:07:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  643.020          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  540.284          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  772.240          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  644.828          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  386.738          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2   22.542          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  373.684          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  320.390          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  468.091          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  511.063          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  489.383          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   56.408          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  189.080          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  184.156          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  488.258          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  281.206          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  349.306          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  247.321          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  354.231          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  101.475          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  518.623          ops/s
c.g.f.j.stream.Serialization.jakartajson            thrpt    2  505.963          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   48.020          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   63.271          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  210.971          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   69.832          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  310.017          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  211.045          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   66.469          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2    7.861          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   37.705          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2    7.026          ops/s
