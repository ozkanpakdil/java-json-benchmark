# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2565299228233 as seed for Random
880.313 ops/s
Iteration   1: 919.178 ops/s
Iteration   2: 921.218 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  920.198 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2578231583973 as seed for Random
690.635 ops/s
Iteration   1: 742.856 ops/s
Iteration   2: 755.243 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  749.049 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2591210540952 as seed for Random
837.924 ops/s
Iteration   1: 901.717 ops/s
Iteration   2: 888.929 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  895.323 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2604170483595 as seed for Random
834.435 ops/s
Iteration   1: 887.644 ops/s
Iteration   2: 884.473 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  886.058 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2617078052678 as seed for Random
218.910 ops/s
Iteration   1: 239.360 ops/s
Iteration   2: 240.406 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  239.883 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2630132332056 as seed for Random
33.483 ops/s
Iteration   1: 25.436 ops/s
Iteration   2: 23.476 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  24.456 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2644487885028 as seed for Random
377.239 ops/s
Iteration   1: 517.527 ops/s
Iteration   2: 516.510 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  517.019 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2657456762160 as seed for Random
432.396 ops/s
Iteration   1: 471.608 ops/s
Iteration   2: 471.080 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  471.344 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2670368097821 as seed for Random
476.480 ops/s
Iteration   1: 655.265 ops/s
Iteration   2: 655.286 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  655.275 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2683250179974 as seed for Random
572.353 ops/s
Iteration   1: 715.904 ops/s
Iteration   2: 710.485 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  713.194 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2696200368669 as seed for Random
589.025 ops/s
Iteration   1: 690.301 ops/s
Iteration   2: 683.950 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  687.125 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2709120881834 as seed for Random
54.972 ops/s
Iteration   1: 59.507 ops/s
Iteration   2: 59.718 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  59.612 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2722548359000 as seed for Random
163.560 ops/s
Iteration   1: 203.308 ops/s
Iteration   2: 203.740 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  203.524 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2735564613415 as seed for Random
198.264 ops/s
Iteration   1: 203.089 ops/s
Iteration   2: 202.517 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  202.803 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2748587608548 as seed for Random
567.566 ops/s
Iteration   1: 681.234 ops/s
Iteration   2: 684.960 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  683.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2761537848405 as seed for Random
366.399 ops/s
Iteration   1: 400.850 ops/s
Iteration   2: 400.583 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  400.716 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2774472966650 as seed for Random
405.959 ops/s
Iteration   1: 439.089 ops/s
Iteration   2: 439.017 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  439.053 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2787404302197 as seed for Random
210.221 ops/s
Iteration   1: 297.150 ops/s
Iteration   2: 296.232 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  296.691 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2800428899132 as seed for Random
434.714 ops/s
Iteration   1: 516.005 ops/s
Iteration   2: 517.286 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  516.645 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2813371164303 as seed for Random
139.998 ops/s
Iteration   1: 156.846 ops/s
Iteration   2: 154.078 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  155.462 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2826422908647 as seed for Random
559.299 ops/s
Iteration   1: 663.248 ops/s
Iteration   2: 663.849 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  663.548 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2839334031210 as seed for Random
644.783 ops/s
Iteration   1: 736.944 ops/s
Iteration   2: 724.871 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  730.908 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2852296417499 as seed for Random
47.324 ops/s
Iteration   1: 53.399 ops/s
Iteration   2: 53.951 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  53.675 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2865713575315 as seed for Random
43.713 ops/s
Iteration   1: 49.450 ops/s
Iteration   2: 49.154 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  49.302 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2879364288823 as seed for Random
173.179 ops/s
Iteration   1: 232.406 ops/s
Iteration   2: 232.763 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  232.585 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2892342361721 as seed for Random
73.860 ops/s
Iteration   1: 99.856 ops/s
Iteration   2: 100.894 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  100.375 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2905563267422 as seed for Random
305.200 ops/s
Iteration   1: 378.910 ops/s
Iteration   2: 376.340 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  377.625 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2918533084093 as seed for Random
215.141 ops/s
Iteration   1: 228.335 ops/s
Iteration   2: 229.611 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  228.973 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2931519383980 as seed for Random
60.745 ops/s
Iteration   1: 75.510 ops/s
Iteration   2: 77.036 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  76.273 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2944817305002 as seed for Random
12.950 ops/s
Iteration   1: 23.128 ops/s
Iteration   2: 19.850 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  21.489 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2959600697464 as seed for Random
35.677 ops/s
Iteration   1: 43.785 ops/s
Iteration   2: 43.392 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  43.589 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2973244488032 as seed for Random
10.354 ops/s
Iteration   1: 14.597 ops/s
Iteration   2: 10.118 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  12.358 ops/s


# Run complete. Total time: 00:07:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  920.198          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  749.049          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  895.323          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  886.058          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  239.883          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2   24.456          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  517.019          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  471.344          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  655.275          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  713.194          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  687.125          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   59.612          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  203.524          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  202.803          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  683.097          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  400.716          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  439.053          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  296.691          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  516.645          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  155.462          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  663.548          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  730.908          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   53.675          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   49.302          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  232.585          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2  100.375          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  377.625          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  228.973          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   76.273          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   21.489          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   43.589          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   12.358          ops/s
