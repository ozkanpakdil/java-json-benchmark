# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2408551333841 as seed for Random
823.272 ops/s
Iteration   1: 883.131 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  883.131 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.33% complete, ETA 00:06:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2421559674280 as seed for Random
654.392 ops/s
Iteration   1: 757.380 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  757.380 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.67% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2434516930881 as seed for Random
830.247 ops/s
Iteration   1: 931.829 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  931.829 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 10.00% complete, ETA 00:05:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2447452938185 as seed for Random
807.742 ops/s
Iteration   1: 861.648 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  861.648 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 13.33% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2460365977301 as seed for Random
28.459 ops/s
Iteration   1: 38.479 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  38.479 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 16.67% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2474513499074 as seed for Random
573.026 ops/s
Iteration   1: 643.054 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  643.054 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 20.00% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2487545737289 as seed for Random
362.664 ops/s
Iteration   1: 418.225 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  418.225 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 23.33% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2500529880833 as seed for Random
581.754 ops/s
Iteration   1: 672.997 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  672.997 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 26.67% complete, ETA 00:04:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2513516270976 as seed for Random
430.805 ops/s
Iteration   1: 713.464 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  713.464 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 30.00% complete, ETA 00:04:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2526459723625 as seed for Random
595.894 ops/s
Iteration   1: 687.701 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  687.701 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 33.33% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2539385626420 as seed for Random
54.241 ops/s
Iteration   1: 58.209 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  58.209 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 36.67% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2553048658293 as seed for Random
171.809 ops/s
Iteration   1: 214.623 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  214.623 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.00% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2566124853418 as seed for Random
178.651 ops/s
Iteration   1: 196.429 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  196.429 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.33% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2579214491044 as seed for Random
539.517 ops/s
Iteration   1: 659.339 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  659.339 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.67% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2592204420045 as seed for Random
287.167 ops/s
Iteration   1: 331.442 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  331.442 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 50.00% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2605270408238 as seed for Random
274.366 ops/s
Iteration   1: 335.223 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  335.223 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 53.33% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2618321832371 as seed for Random
297.038 ops/s
Iteration   1: 444.687 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  444.687 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 56.67% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2631331355810 as seed for Random
113.260 ops/s
Iteration   1: 136.394 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  136.394 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2644544957677 as seed for Random
234.932 ops/s
Iteration   1: 651.337 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  651.337 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 63.33% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2657513206584 as seed for Random
596.135 ops/s
Iteration   1: 708.355 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  708.355 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 66.67% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2670525276162 as seed for Random
46.423 ops/s
Iteration   1: 51.983 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  51.983 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 70.00% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2684312185819 as seed for Random
38.214 ops/s
Iteration   1: 45.385 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  45.385 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 73.33% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2698178823835 as seed for Random
131.738 ops/s
Iteration   1: 237.902 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  237.902 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 76.67% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2711450016576 as seed for Random
47.967 ops/s
Iteration   1: 71.363 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  71.363 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 80.00% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2725100450020 as seed for Random
270.890 ops/s
Iteration   1: 345.175 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  345.175 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 83.33% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2738188254143 as seed for Random
211.270 ops/s
Iteration   1: 229.360 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  229.360 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 86.67% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2751295382671 as seed for Random
60.702 ops/s
Iteration   1: 70.633 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  70.633 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.00% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2764815052313 as seed for Random
15.522 ops/s
Iteration   1: 18.555 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  18.555 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.33% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2781159891415 as seed for Random
32.861 ops/s
Iteration   1: 39.203 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  39.203 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.67% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2795286509199 as seed for Random
9.530 ops/s
Iteration   1: 11.466 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  11.466 ops/s


# Run complete. Total time: 00:06:45

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt    Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt       883.131          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt       757.380          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt       931.829          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt       861.648          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt        38.479          ops/s
c.g.f.j.databind.Serialization.genson               thrpt       643.054          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt       418.225          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt       672.997          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt       713.464          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt       687.701          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt        58.209          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt       214.623          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt       196.429          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt       659.339          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt       331.442          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt       335.223          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt       444.687          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt       136.394          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt       651.337          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt       708.355          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt        51.983          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt        45.385          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt       237.902          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt        71.363          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt       345.175          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt       229.360          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt        70.633          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt        18.555          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt        39.203          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt        11.466          ops/s
