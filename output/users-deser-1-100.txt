# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2345092843354 as seed for Random
5451.285 ops/s
Iteration   1: 6867.042 ops/s
Iteration   2: 6852.135 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  6859.588 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2358014374572 as seed for Random
3507.958 ops/s
Iteration   1: 4890.341 ops/s
Iteration   2: 4922.989 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  4906.665 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2370931160765 as seed for Random
6153.242 ops/s
Iteration   1: 7282.650 ops/s
Iteration   2: 7306.318 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  7294.484 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2383790237705 as seed for Random
5145.426 ops/s
Iteration   1: 5544.663 ops/s
Iteration   2: 5469.012 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  5506.837 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2396693340524 as seed for Random
2911.215 ops/s
Iteration   1: 3685.743 ops/s
Iteration   2: 3726.572 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  3706.157 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2409608582577 as seed for Random
271.204 ops/s
Iteration   1: 536.920 ops/s
Iteration   2: 533.299 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  535.109 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2422571501610 as seed for Random
2887.463 ops/s
Iteration   1: 3805.638 ops/s
Iteration   2: 3814.870 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  3810.254 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2435434414490 as seed for Random
3129.640 ops/s
Iteration   1: 3791.916 ops/s
Iteration   2: 3792.313 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  3792.114 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2448323574841 as seed for Random
3908.806 ops/s
Iteration   1: 4791.485 ops/s
Iteration   2: 4771.478 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  4781.482 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2461208537446 as seed for Random
4601.432 ops/s
Iteration   1: 5459.415 ops/s
Iteration   2: 5469.002 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  5464.208 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2474062061766 as seed for Random
4413.322 ops/s
Iteration   1: 5172.865 ops/s
Iteration   2: 5167.586 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  5170.226 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2486913959713 as seed for Random
3233.833 ops/s
Iteration   1: 3838.880 ops/s
Iteration   2: 3868.271 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  3853.576 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2499815631024 as seed for Random
715.078 ops/s
Iteration   1: 889.961 ops/s
Iteration   2: 929.223 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  909.592 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2512762078995 as seed for Random
4280.540 ops/s
Iteration   1: 5027.166 ops/s
Iteration   2: 5007.327 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  5017.246 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2525667477268 as seed for Random
2721.280 ops/s
Iteration   1: 4515.410 ops/s
Iteration   2: 4072.936 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  4294.173 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2538555656353 as seed for Random
2135.750 ops/s
Iteration   1: 3020.095 ops/s
Iteration   2: 3041.030 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  3030.563 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2551465837134 as seed for Random
3787.673 ops/s
Iteration   1: 4514.254 ops/s
Iteration   2: 4472.336 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  4493.295 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2564318293092 as seed for Random
415.240 ops/s
Iteration   1: 707.670 ops/s
Iteration   2: 702.042 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  704.856 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2577235614062 as seed for Random
2650.583 ops/s
Iteration   1: 4649.820 ops/s
Iteration   2: 4731.243 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  4690.532 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2590143268367 as seed for Random
1361.044 ops/s
Iteration   1: 2942.524 ops/s
Iteration   2: 2953.426 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  2947.975 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2603091441446 as seed for Random
3714.229 ops/s
Iteration   1: 5242.423 ops/s
Iteration   2: 5233.382 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  5237.902 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2616003653081 as seed for Random
1873.059 ops/s
Iteration   1: 3086.989 ops/s
Iteration   2: 3098.480 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  3092.735 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2628917320865 as seed for Random
303.858 ops/s
Iteration   1: 546.144 ops/s
Iteration   2: 538.334 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  542.239 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2641853437464 as seed for Random
947.326 ops/s
Iteration   1: 1289.537 ops/s
Iteration   2: 1284.271 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  1286.904 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2654724445463 as seed for Random
1134.014 ops/s
Iteration   1: 2471.846 ops/s
Iteration   2: 2481.946 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  2476.896 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2667619251805 as seed for Random
556.505 ops/s
Iteration   1: 724.588 ops/s
Iteration   2: 725.163 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  724.876 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2680532367899 as seed for Random
1361.042 ops/s
Iteration   1: 2913.446 ops/s
Iteration   2: 2880.024 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  2896.735 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2693442128647 as seed for Random
2135.518 ops/s
Iteration   1: 2720.243 ops/s
Iteration   2: 2723.355 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  2721.799 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2706325696392 as seed for Random
590.384 ops/s
Iteration   1: 736.814 ops/s
Iteration   2: 740.367 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  738.591 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2719240432866 as seed for Random
661.868 ops/s
Iteration   1: 782.778 ops/s
Iteration   2: 807.326 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  795.052 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2732133296919 as seed for Random
2814.670 ops/s
Iteration   1: 4133.817 ops/s
Iteration   2: 4142.514 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  4138.165 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2744993035946 as seed for Random
2324.488 ops/s
Iteration   1: 3457.575 ops/s
Iteration   2: 3504.125 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  3480.850 ops/s


# Run complete. Total time: 00:06:52

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  6859.588          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  4906.665          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  7294.484          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  5506.837          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  3706.157          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   535.109          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  3810.254          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  3792.114          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  4781.482          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  5464.208          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  5170.226          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  3853.576          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   909.592          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  5017.246          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  4294.173          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  3030.563          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  4493.295          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   704.856          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  4690.532          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  2947.975          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  5237.902          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  3092.735          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   542.239          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  1286.904          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  2476.896          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   724.876          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  2896.735          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  2721.799          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   738.591          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   795.052          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  4138.165          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  3480.850          ops/s
