# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2153675226853 as seed for Random
5750.833 ops/s
Iteration   1: 6706.151 ops/s
Iteration   2: 6747.339 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  6726.745 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2166504366412 as seed for Random
4228.893 ops/s
Iteration   1: 5037.950 ops/s
Iteration   2: 5035.072 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  5036.511 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2179375637652 as seed for Random
7034.805 ops/s
Iteration   1: 8002.559 ops/s
Iteration   2: 7972.918 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  7987.738 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2192248668311 as seed for Random
4847.106 ops/s
Iteration   1: 6328.642 ops/s
Iteration   2: 6334.413 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  6331.528 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2205038210203 as seed for Random
2980.126 ops/s
Iteration   1: 3763.548 ops/s
Iteration   2: 3787.601 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  3775.574 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2217886047323 as seed for Random
305.689 ops/s
Iteration   1: 473.137 ops/s
Iteration   2: 472.515 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  472.826 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2230806970189 as seed for Random
3212.118 ops/s
Iteration   1: 3805.164 ops/s
Iteration   2: 3806.463 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  3805.813 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2243647226602 as seed for Random
3548.365 ops/s
Iteration   1: 4055.038 ops/s
Iteration   2: 4048.068 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  4051.553 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2256468469360 as seed for Random
3981.259 ops/s
Iteration   1: 4845.165 ops/s
Iteration   2: 4824.414 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  4834.790 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2269334120506 as seed for Random
5133.636 ops/s
Iteration   1: 5921.680 ops/s
Iteration   2: 5925.509 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  5923.595 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2282133031094 as seed for Random
4745.371 ops/s
Iteration   1: 5399.863 ops/s
Iteration   2: 5400.116 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  5399.989 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2294928755896 as seed for Random
3104.264 ops/s
Iteration   1: 3572.694 ops/s
Iteration   2: 3588.470 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  3580.582 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2307753899682 as seed for Random
678.929 ops/s
Iteration   1: 826.469 ops/s
Iteration   2: 858.332 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  842.400 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2320626926084 as seed for Random
4478.130 ops/s
Iteration   1: 5053.489 ops/s
Iteration   2: 5071.688 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  5062.589 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2333444104410 as seed for Random
4432.838 ops/s
Iteration   1: 5344.531 ops/s
Iteration   2: 5380.891 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  5362.711 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2346300388272 as seed for Random
2462.358 ops/s
Iteration   1: 3344.340 ops/s
Iteration   2: 3318.972 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  3331.656 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2359142606278 as seed for Random
3836.677 ops/s
Iteration   1: 4703.840 ops/s
Iteration   2: 4701.393 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  4702.616 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2371929073788 as seed for Random
491.244 ops/s
Iteration   1: 660.350 ops/s
Iteration   2: 659.309 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  659.830 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2384773118638 as seed for Random
3150.964 ops/s
Iteration   1: 4008.780 ops/s
Iteration   2: 4023.275 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  4016.028 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2397628571462 as seed for Random
2250.935 ops/s
Iteration   1: 2916.105 ops/s
Iteration   2: 2919.391 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  2917.748 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2410442512131 as seed for Random
4139.569 ops/s
Iteration   1: 5652.163 ops/s
Iteration   2: 5659.740 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  5655.951 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2423292278085 as seed for Random
1841.739 ops/s
Iteration   1: 2613.837 ops/s
Iteration   2: 2679.819 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  2646.828 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2436125084809 as seed for Random
432.326 ops/s
Iteration   1: 545.249 ops/s
Iteration   2: 546.414 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  545.831 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2448973465798 as seed for Random
732.569 ops/s
Iteration   1: 1260.484 ops/s
Iteration   2: 1262.190 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  1261.337 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2461851517470 as seed for Random
1706.301 ops/s
Iteration   1: 2653.941 ops/s
Iteration   2: 2664.253 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  2659.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2474721012775 as seed for Random
489.537 ops/s
Iteration   1: 599.358 ops/s
Iteration   2: 600.889 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  600.123 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2487602235301 as seed for Random
1555.197 ops/s
Iteration   1: 3059.541 ops/s
Iteration   2: 3068.413 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  3063.977 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2500443624679 as seed for Random
2693.088 ops/s
Iteration   1: 3168.156 ops/s
Iteration   2: 3172.921 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  3170.539 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2513229130572 as seed for Random
461.677 ops/s
Iteration   1: 600.203 ops/s
Iteration   2: 597.293 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  598.748 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2526081475437 as seed for Random
601.331 ops/s
Iteration   1: 831.901 ops/s
Iteration   2: 826.710 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  829.306 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2538929207129 as seed for Random
2906.651 ops/s
Iteration   1: 4311.816 ops/s
Iteration   2: 4328.403 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  4320.110 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2551774032920 as seed for Random
2687.189 ops/s
Iteration   1: 3509.154 ops/s
Iteration   2: 3558.669 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  3533.912 ops/s


# Run complete. Total time: 00:06:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  6726.745          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  5036.511          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  7987.738          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  6331.528          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  3775.574          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   472.826          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  3805.813          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  4051.553          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  4834.790          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  5923.595          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  5399.989          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  3580.582          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   842.400          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  5062.589          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  5362.711          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  3331.656          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  4702.616          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   659.830          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  4016.028          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  2917.748          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  5655.951          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  2646.828          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   545.831          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  1261.337          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  2659.097          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   600.123          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  3063.977          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  3170.539          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   598.748          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   829.306          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  4320.110          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  3533.912          ops/s
