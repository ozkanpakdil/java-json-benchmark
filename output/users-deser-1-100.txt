# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2343854875560 as seed for Random
4180.924 ops/s
Iteration   1: 5485.177 ops/s
Iteration   2: 5538.622 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  5511.900 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2356957524070 as seed for Random
2824.489 ops/s
Iteration   1: 3986.186 ops/s
Iteration   2: 3930.283 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  3958.234 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2370094879022 as seed for Random
5408.596 ops/s
Iteration   1: 6201.199 ops/s
Iteration   2: 6327.144 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  6264.172 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2383223746671 as seed for Random
3663.368 ops/s
Iteration   1: 4838.901 ops/s
Iteration   2: 4656.789 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  4747.845 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2396309164806 as seed for Random
2088.025 ops/s
Iteration   1: 2755.523 ops/s
Iteration   2: 2599.594 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  2677.558 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2409452089136 as seed for Random
102.367 ops/s
Iteration   1: 324.856 ops/s
Iteration   2: 393.370 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  359.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2422604838552 as seed for Random
2011.960 ops/s
Iteration   1: 3195.716 ops/s
Iteration   2: 3159.537 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  3177.626 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2435671549705 as seed for Random
2632.257 ops/s
Iteration   1: 3189.232 ops/s
Iteration   2: 3078.606 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  3133.919 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2448760437230 as seed for Random
2816.373 ops/s
Iteration   1: 3806.591 ops/s
Iteration   2: 3747.656 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  3777.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2461930058692 as seed for Random
3675.081 ops/s
Iteration   1: 4171.096 ops/s
Iteration   2: 4332.368 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  4251.732 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2475113173265 as seed for Random
3181.955 ops/s
Iteration   1: 4158.945 ops/s
Iteration   2: 4226.507 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  4192.726 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2488217309208 as seed for Random
2230.920 ops/s
Iteration   1: 2788.432 ops/s
Iteration   2: 2624.325 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  2706.378 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2501289762542 as seed for Random
560.821 ops/s
Iteration   1: 833.083 ops/s
Iteration   2: 797.133 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  815.108 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2514491035719 as seed for Random
3089.612 ops/s
Iteration   1: 3588.856 ops/s
Iteration   2: 3626.765 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  3607.810 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2527719313902 as seed for Random
2560.229 ops/s
Iteration   1: 3792.965 ops/s
Iteration   2: 3754.547 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  3773.756 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2540881231275 as seed for Random
1506.946 ops/s
Iteration   1: 2191.770 ops/s
Iteration   2: 2204.787 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  2198.279 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2554011435107 as seed for Random
2632.192 ops/s
Iteration   1: 3543.061 ops/s
Iteration   2: 3446.962 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  3495.012 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2567174718517 as seed for Random
329.803 ops/s
Iteration   1: 582.257 ops/s
Iteration   2: 614.865 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  598.561 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2580329520509 as seed for Random
1467.512 ops/s
Iteration   1: 3117.127 ops/s
Iteration   2: 3190.411 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  3153.769 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2593515482134 as seed for Random
1338.559 ops/s
Iteration   1: 2380.485 ops/s
Iteration   2: 2380.276 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  2380.380 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2606853110214 as seed for Random
3376.442 ops/s
Iteration   1: 4186.403 ops/s
Iteration   2: 4197.624 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  4192.013 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2619966724229 as seed for Random
1002.653 ops/s
Iteration   1: 1938.832 ops/s
Iteration   2: 1939.047 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  1938.939 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2633090162486 as seed for Random
283.007 ops/s
Iteration   1: 522.943 ops/s
Iteration   2: 535.520 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  529.232 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2646291539065 as seed for Random
679.168 ops/s
Iteration   1: 947.786 ops/s
Iteration   2: 947.812 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  947.799 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2659437039427 as seed for Random
820.875 ops/s
Iteration   1: 2128.870 ops/s
Iteration   2: 2105.449 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  2117.159 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2672625664468 as seed for Random
472.899 ops/s
Iteration   1: 584.212 ops/s
Iteration   2: 565.794 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  575.003 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2685772465834 as seed for Random
287.864 ops/s
Iteration   1: 586.937 ops/s
Iteration   2: 947.182 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  767.060 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2698968053394 as seed for Random
1776.725 ops/s
Iteration   1: 2285.109 ops/s
Iteration   2: 2295.331 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  2290.220 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2712160004576 as seed for Random
441.603 ops/s
Iteration   1: 556.148 ops/s
Iteration   2: 561.394 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  558.771 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2725371923215 as seed for Random
390.810 ops/s
Iteration   1: 625.226 ops/s
Iteration   2: 615.267 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  620.247 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2738555976627 as seed for Random
2316.071 ops/s
Iteration   1: 2919.575 ops/s
Iteration   2: 2927.868 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  2923.721 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2751750539465 as seed for Random
1191.822 ops/s
Iteration   1: 2360.822 ops/s
Iteration   2: 2303.716 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  2332.269 ops/s


# Run complete. Total time: 00:07:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  5511.900          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  3958.234          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  6264.172          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  4747.845          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  2677.558          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   359.113          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  3177.626          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  3133.919          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  3777.124          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  4251.732          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  4192.726          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  2706.378          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   815.108          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  3607.810          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  3773.756          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  2198.279          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  3495.012          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   598.561          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  3153.769          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  2380.380          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  4192.013          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  1938.939          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   529.232          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   947.799          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  2117.159          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   575.003          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2   767.060          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  2290.220          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   558.771          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   620.247          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  2923.721          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  2332.269          ops/s
