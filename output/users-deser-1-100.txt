# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2428653969962 as seed for Random
2443.257 ops/s
Iteration   1: 2640.413 ops/s
Iteration   2: 2647.203 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  2643.808 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2441705322303 as seed for Random
1750.305 ops/s
Iteration   1: 1885.157 ops/s
Iteration   2: 1921.592 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  1903.375 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2454751647301 as seed for Random
2992.834 ops/s
Iteration   1: 3135.967 ops/s
Iteration   2: 3205.899 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  3170.933 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2467756980335 as seed for Random
2321.396 ops/s
Iteration   1: 2516.351 ops/s
Iteration   2: 2471.898 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  2494.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2480789349962 as seed for Random
1293.681 ops/s
Iteration   1: 1423.230 ops/s
Iteration   2: 1423.595 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  1423.413 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2493861212473 as seed for Random
194.453 ops/s
Iteration   1: 218.856 ops/s
Iteration   2: 221.125 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  219.990 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2506892000622 as seed for Random
1520.936 ops/s
Iteration   1: 1596.787 ops/s
Iteration   2: 1639.001 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  1617.894 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2519948839439 as seed for Random
1423.502 ops/s
Iteration   1: 1520.196 ops/s
Iteration   2: 1533.847 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  1527.022 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2532972857214 as seed for Random
1678.094 ops/s
Iteration   1: 1866.476 ops/s
Iteration   2: 1857.929 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  1862.203 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2545967209247 as seed for Random
2009.203 ops/s
Iteration   1: 2138.373 ops/s
Iteration   2: 2151.233 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  2144.803 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2559009355022 as seed for Random
2035.523 ops/s
Iteration   1: 2192.341 ops/s
Iteration   2: 2128.055 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  2160.198 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2572045748552 as seed for Random
1224.013 ops/s
Iteration   1: 1318.886 ops/s
Iteration   2: 1347.619 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  1333.252 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2585081128686 as seed for Random
429.091 ops/s
Iteration   1: 457.203 ops/s
Iteration   2: 463.294 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  460.248 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2598133580603 as seed for Random
1610.770 ops/s
Iteration   1: 1746.527 ops/s
Iteration   2: 1738.940 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  1742.734 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2611143886784 as seed for Random
1768.088 ops/s
Iteration   1: 1941.701 ops/s
Iteration   2: 1927.608 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  1934.655 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2624223894569 as seed for Random
1223.021 ops/s
Iteration   1: 1326.939 ops/s
Iteration   2: 1300.838 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  1313.888 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2637250339451 as seed for Random
1633.725 ops/s
Iteration   1: 1796.495 ops/s
Iteration   2: 1764.725 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  1780.610 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2650293326873 as seed for Random
267.308 ops/s
Iteration   1: 304.527 ops/s
Iteration   2: 315.984 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  310.256 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2663275335634 as seed for Random
1653.106 ops/s
Iteration   1: 1847.433 ops/s
Iteration   2: 1872.455 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  1859.944 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2676331545582 as seed for Random
1337.152 ops/s
Iteration   1: 1484.340 ops/s
Iteration   2: 1443.896 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  1464.118 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2689325343230 as seed for Random
1879.718 ops/s
Iteration   1: 2070.119 ops/s
Iteration   2: 2107.960 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  2089.040 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2702318715020 as seed for Random
1034.631 ops/s
Iteration   1: 1134.992 ops/s
Iteration   2: 1128.231 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  1131.612 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2715342700218 as seed for Random
264.592 ops/s
Iteration   1: 273.714 ops/s
Iteration   2: 281.251 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  277.482 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2728385247595 as seed for Random
445.364 ops/s
Iteration   1: 478.034 ops/s
Iteration   2: 487.754 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  482.894 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2741453761523 as seed for Random
980.155 ops/s
Iteration   1: 1074.860 ops/s
Iteration   2: 1104.303 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  1089.581 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2754499077460 as seed for Random
266.564 ops/s
Iteration   1: 283.120 ops/s
Iteration   2: 288.938 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  286.029 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2767512760953 as seed for Random
1119.853 ops/s
Iteration   1: 1212.601 ops/s
Iteration   2: 1160.587 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  1186.594 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2780529419958 as seed for Random
996.806 ops/s
Iteration   1: 1063.670 ops/s
Iteration   2: 1068.206 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  1065.938 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2793613194960 as seed for Random
280.968 ops/s
Iteration   1: 289.659 ops/s
Iteration   2: 292.774 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  291.216 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2806581203662 as seed for Random
303.598 ops/s
Iteration   1: 333.264 ops/s
Iteration   2: 333.106 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  333.185 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2819673449238 as seed for Random
1334.365 ops/s
Iteration   1: 1449.513 ops/s
Iteration   2: 1426.221 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  1437.867 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2832745662834 as seed for Random
1074.545 ops/s
Iteration   1: 1196.353 ops/s
Iteration   2: 1200.345 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  1198.349 ops/s


# Run complete. Total time: 00:06:57

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  2643.808          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  1903.375          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  3170.933          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  2494.124          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  1423.413          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   219.990          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  1617.894          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  1527.022          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  1862.203          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  2144.803          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  2160.198          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  1333.252          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   460.248          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  1742.734          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  1934.655          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  1313.888          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  1780.610          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   310.256          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  1859.944          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  1464.118          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  2089.040          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  1131.612          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   277.482          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   482.894          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  1089.581          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   286.029          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  1186.594          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  1065.938          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   291.216          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   333.185          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  1437.867          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  1198.349          ops/s
