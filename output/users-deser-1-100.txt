# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2341996757642 as seed for Random
4281.033 ops/s
Iteration   1: 5239.958 ops/s
Iteration   2: 5513.191 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  5376.574 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2355281083261 as seed for Random
2675.696 ops/s
Iteration   1: 3925.827 ops/s
Iteration   2: 3848.595 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  3887.211 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2368458462599 as seed for Random
4865.397 ops/s
Iteration   1: 6275.703 ops/s
Iteration   2: 6237.412 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  6256.557 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2381633937178 as seed for Random
3495.173 ops/s
Iteration   1: 4862.435 ops/s
Iteration   2: 5084.886 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  4973.660 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2394726782389 as seed for Random
5108.821 ops/s
Iteration   1: 6355.095 ops/s
Iteration   2: 6495.776 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  6425.436 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2407891037016 as seed for Random
135.674 ops/s
Iteration   1: 362.827 ops/s
Iteration   2: 419.175 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  391.001 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2421239182080 as seed for Random
2544.770 ops/s
Iteration   1: 3316.606 ops/s
Iteration   2: 3150.102 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  3233.354 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2434413822443 as seed for Random
2371.541 ops/s
Iteration   1: 2884.841 ops/s
Iteration   2: 2962.600 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  2923.720 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2447587154145 as seed for Random
2621.428 ops/s
Iteration   1: 3738.569 ops/s
Iteration   2: 3695.245 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  3716.907 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2460713324336 as seed for Random
3542.542 ops/s
Iteration   1: 4409.533 ops/s
Iteration   2: 4214.525 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  4312.029 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2473851052103 as seed for Random
3185.258 ops/s
Iteration   1: 3904.742 ops/s
Iteration   2: 4008.851 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  3956.797 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2486948641035 as seed for Random
1996.887 ops/s
Iteration   1: 2595.425 ops/s
Iteration   2: 2643.084 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  2619.254 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2500121243702 as seed for Random
566.976 ops/s
Iteration   1: 806.454 ops/s
Iteration   2: 833.270 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  819.862 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2513349058051 as seed for Random
2629.145 ops/s
Iteration   1: 3391.243 ops/s
Iteration   2: 3495.924 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  3443.583 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2526535250580 as seed for Random
1619.198 ops/s
Iteration   1: 3404.287 ops/s
Iteration   2: 3401.261 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  3402.774 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2539726558231 as seed for Random
1621.435 ops/s
Iteration   1: 2214.878 ops/s
Iteration   2: 2295.460 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  2255.169 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2552882248116 as seed for Random
2654.471 ops/s
Iteration   1: 3549.441 ops/s
Iteration   2: 3644.980 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  3597.210 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2566047915487 as seed for Random
270.529 ops/s
Iteration   1: 662.423 ops/s
Iteration   2: 1570.419 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  1116.421 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2579320405235 as seed for Random
2201.950 ops/s
Iteration   1: 3100.991 ops/s
Iteration   2: 2799.750 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  2950.371 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2592704998982 as seed for Random
1325.257 ops/s
Iteration   1: 2198.737 ops/s
Iteration   2: 2217.852 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  2208.295 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2605868546793 as seed for Random
2499.825 ops/s
Iteration   1: 4045.828 ops/s
Iteration   2: 4051.515 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  4048.671 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jakartajson

# Run progress: 65.63% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2619064453543 as seed for Random
1107.588 ops/s
Iteration   1: 1619.180 ops/s
Iteration   2: 1509.734 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jakartajson":
  1564.457 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2632287089550 as seed for Random
214.195 ops/s
Iteration   1: 546.659 ops/s
Iteration   2: 556.047 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  551.353 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2645433730343 as seed for Random
556.819 ops/s
Iteration   1: 915.159 ops/s
Iteration   2: 921.393 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  918.276 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2658631361161 as seed for Random
1264.930 ops/s
Iteration   1: 1892.110 ops/s
Iteration   2: 1863.382 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  1877.746 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2671846580310 as seed for Random
448.473 ops/s
Iteration   1: 532.846 ops/s
Iteration   2: 541.169 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  537.007 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2685051543687 as seed for Random
628.993 ops/s
Iteration   1: 1172.359 ops/s
Iteration   2: 2021.598 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  1596.978 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2698319967202 as seed for Random
1529.828 ops/s
Iteration   1: 1985.640 ops/s
Iteration   2: 2014.668 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  2000.154 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2711519580956 as seed for Random
454.190 ops/s
Iteration   1: 572.918 ops/s
Iteration   2: 567.779 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  570.349 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2724705529149 as seed for Random
415.666 ops/s
Iteration   1: 632.825 ops/s
Iteration   2: 640.184 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  636.505 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2737949389349 as seed for Random
2323.483 ops/s
Iteration   1: 2947.294 ops/s
Iteration   2: 2932.367 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  2939.831 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g --add-opens=java.base/java.time=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2751073184211 as seed for Random
1433.788 ops/s
Iteration   1: 2388.743 ops/s
Iteration   2: 2492.220 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  2440.481 ops/s


# Run complete. Total time: 00:07:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  5376.574          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  3887.211          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  6256.557          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  4973.660          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  6425.436          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   391.001          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  3233.354          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  2923.720          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  3716.907          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  4312.029          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  3956.797          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  2619.254          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   819.862          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  3443.583          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  3402.774          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  2255.169          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  3597.210          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2  1116.421          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  2950.371          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  2208.295          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  4048.671          ops/s
c.g.f.j.stream.Deserialization.jakartajson            thrpt    2  1564.457          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   551.353          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   918.276          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  1877.746          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   537.007          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  1596.978          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  2000.154          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   570.349          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   636.505          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  2939.831          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  2440.481          ops/s
