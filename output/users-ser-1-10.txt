# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1106603078019 as seed for Random
83976.506 ops/s
Iteration   1: 84555.488 ops/s
Iteration   2: 86334.765 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  85445.126 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1119492592751 as seed for Random
62472.047 ops/s
Iteration   1: 67268.657 ops/s
Iteration   2: 69191.663 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  68230.160 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1132396203729 as seed for Random
81509.910 ops/s
Iteration   1: 94011.502 ops/s
Iteration   2: 96538.683 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  95275.093 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1145235362182 as seed for Random
77932.992 ops/s
Iteration   1: 80517.437 ops/s
Iteration   2: 82736.773 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  81627.105 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1158057043238 as seed for Random
38610.193 ops/s
Iteration   1: 43878.266 ops/s
Iteration   2: 43685.965 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  43782.115 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1170927450887 as seed for Random
410.314 ops/s
Iteration   1: 238.059 ops/s
Iteration   2: 229.756 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  233.907 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1183891294303 as seed for Random
42375.610 ops/s
Iteration   1: 52485.076 ops/s
Iteration   2: 52211.737 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  52348.407 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1196726098677 as seed for Random
42635.225 ops/s
Iteration   1: 48298.947 ops/s
Iteration   2: 48254.140 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  48276.544 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1209574628995 as seed for Random
60830.153 ops/s
Iteration   1: 65720.544 ops/s
Iteration   2: 67640.664 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  66680.604 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1222441255829 as seed for Random
66566.844 ops/s
Iteration   1: 71071.237 ops/s
Iteration   2: 73680.346 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  72375.792 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1235283500146 as seed for Random
60525.592 ops/s
Iteration   1: 65425.324 ops/s
Iteration   2: 67265.251 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  66345.287 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1248123833319 as seed for Random
5280.966 ops/s
Iteration   1: 6821.514 ops/s
Iteration   2: 6841.054 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  6831.284 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1260962109156 as seed for Random
20929.760 ops/s
Iteration   1: 26240.099 ops/s
Iteration   2: 25885.140 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  26062.620 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1273788694652 as seed for Random
21895.723 ops/s
Iteration   1: 23192.255 ops/s
Iteration   2: 23245.609 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  23218.932 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1286667124135 as seed for Random
53633.377 ops/s
Iteration   1: 64914.845 ops/s
Iteration   2: 67460.983 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  66187.914 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1299552911294 as seed for Random
30593.033 ops/s
Iteration   1: 35081.500 ops/s
Iteration   2: 33526.693 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  34304.096 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1312458836568 as seed for Random
34403.695 ops/s
Iteration   1: 42095.689 ops/s
Iteration   2: 41529.377 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  41812.533 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1325315091799 as seed for Random
17285.847 ops/s
Iteration   1: 26319.485 ops/s
Iteration   2: 26361.418 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  26340.451 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1338170540099 as seed for Random
41468.889 ops/s
Iteration   1: 49945.098 ops/s
Iteration   2: 49444.873 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  49694.985 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1351040918566 as seed for Random
12205.655 ops/s
Iteration   1: 15699.401 ops/s
Iteration   2: 15702.642 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  15701.022 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1363894650839 as seed for Random
54384.523 ops/s
Iteration   1: 62165.059 ops/s
Iteration   2: 64063.474 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  63114.266 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1376796270154 as seed for Random
36516.323 ops/s
Iteration   1: 63600.353 ops/s
Iteration   2: 66190.109 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  64895.231 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1389648692757 as seed for Random
4583.323 ops/s
Iteration   1: 6732.287 ops/s
Iteration   2: 6739.759 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  6736.023 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1402526766097 as seed for Random
4663.582 ops/s
Iteration   1: 5486.852 ops/s
Iteration   2: 5738.073 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  5612.462 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1415405286543 as seed for Random
26104.609 ops/s
Iteration   1: 34389.889 ops/s
Iteration   2: 31262.559 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  32826.224 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1428339388787 as seed for Random
7516.662 ops/s
Iteration   1: 11931.263 ops/s
Iteration   2: 12074.512 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  12002.888 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1441230093007 as seed for Random
30722.497 ops/s
Iteration   1: 36283.300 ops/s
Iteration   2: 33540.855 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  34912.078 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1454057042685 as seed for Random
19329.172 ops/s
Iteration   1: 22665.043 ops/s
Iteration   2: 21705.588 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  22185.316 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1466910106422 as seed for Random
4716.650 ops/s
Iteration   1: 8890.745 ops/s
Iteration   2: 8869.971 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  8880.358 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1479738800922 as seed for Random
6561.943 ops/s
Iteration   1: 9590.150 ops/s
Iteration   2: 10279.836 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  9934.993 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1492647946172 as seed for Random
3768.918 ops/s
Iteration   1: 5221.977 ops/s
Iteration   2: 5216.190 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  5219.083 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1505490199273 as seed for Random
3346.844 ops/s
Iteration   1: 3701.666 ops/s
Iteration   2: 3958.508 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  3830.087 ops/s


# Run complete. Total time: 00:06:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  85445.126          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  68230.160          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  95275.093          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  81627.105          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  43782.115          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    233.907          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  52348.407          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  48276.544          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  66680.604          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  72375.792          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  66345.287          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   6831.284          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  26062.620          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  23218.932          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  66187.914          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  34304.096          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  41812.533          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  26340.451          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  49694.985          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  15701.022          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  63114.266          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  64895.231          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   6736.023          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   5612.462          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  32826.224          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2  12002.888          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  34912.078          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  22185.316          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   8880.358          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   9934.993          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   5219.083          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   3830.087          ops/s
