# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=920043314893 as seed for Random
86356.335 ops/s
Iteration   1: 86010.422 ops/s
Iteration   2: 88996.204 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  87503.313 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=932895380372 as seed for Random
65397.541 ops/s
Iteration   1: 73651.647 ops/s
Iteration   2: 74847.166 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  74249.406 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=945733189457 as seed for Random
91560.133 ops/s
Iteration   1: 97886.408 ops/s
Iteration   2: 99793.984 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  98840.196 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=958538058060 as seed for Random
83927.647 ops/s
Iteration   1: 87402.739 ops/s
Iteration   2: 88650.705 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  88026.722 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=971315951544 as seed for Random
55530.596 ops/s
Iteration   1: 66850.936 ops/s
Iteration   2: 68691.284 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  67771.110 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=984161558511 as seed for Random
429.403 ops/s
Iteration   1: 242.982 ops/s
Iteration   2: 227.167 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  235.074 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=997131201394 as seed for Random
37577.854 ops/s
Iteration   1: 54623.741 ops/s
Iteration   2: 54633.487 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  54628.614 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1009942356996 as seed for Random
50891.857 ops/s
Iteration   1: 57379.680 ops/s
Iteration   2: 58251.970 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  57815.825 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1022728875395 as seed for Random
67831.297 ops/s
Iteration   1: 71517.950 ops/s
Iteration   2: 73756.344 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  72637.147 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1035556557598 as seed for Random
73517.004 ops/s
Iteration   1: 79786.583 ops/s
Iteration   2: 81463.643 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  80625.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1048325783054 as seed for Random
59243.311 ops/s
Iteration   1: 68887.979 ops/s
Iteration   2: 70375.881 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  69631.930 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1061091610688 as seed for Random
5048.997 ops/s
Iteration   1: 5922.170 ops/s
Iteration   2: 5871.273 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  5896.722 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1073935465076 as seed for Random
19310.880 ops/s
Iteration   1: 23866.137 ops/s
Iteration   2: 23658.854 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  23762.495 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1086747763574 as seed for Random
32145.747 ops/s
Iteration   1: 34589.310 ops/s
Iteration   2: 33123.828 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  33856.569 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1099547058676 as seed for Random
66794.360 ops/s
Iteration   1: 73767.057 ops/s
Iteration   2: 75619.602 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  74693.329 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1112357306019 as seed for Random
30957.131 ops/s
Iteration   1: 37020.999 ops/s
Iteration   2: 35607.719 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  36314.359 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1125169818492 as seed for Random
34240.492 ops/s
Iteration   1: 41950.681 ops/s
Iteration   2: 40046.421 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  40998.551 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1138014105735 as seed for Random
18343.952 ops/s
Iteration   1: 27964.754 ops/s
Iteration   2: 27549.691 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  27757.222 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1150823352767 as seed for Random
43641.944 ops/s
Iteration   1: 52435.702 ops/s
Iteration   2: 52206.490 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  52321.096 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1163608882070 as seed for Random
14164.730 ops/s
Iteration   1: 16255.085 ops/s
Iteration   2: 16304.520 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  16279.803 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1176439552750 as seed for Random
64356.759 ops/s
Iteration   1: 70558.494 ops/s
Iteration   2: 73024.611 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  71791.552 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1189217941287 as seed for Random
53861.463 ops/s
Iteration   1: 62893.163 ops/s
Iteration   2: 65650.206 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  64271.684 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1201983355189 as seed for Random
4434.262 ops/s
Iteration   1: 5315.739 ops/s
Iteration   2: 5468.310 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  5392.025 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1214825827852 as seed for Random
4561.890 ops/s
Iteration   1: 5106.362 ops/s
Iteration   2: 5092.362 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  5099.362 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1227643700531 as seed for Random
33978.493 ops/s
Iteration   1: 43959.314 ops/s
Iteration   2: 42000.759 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  42980.037 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1240485110637 as seed for Random
10241.297 ops/s
Iteration   1: 12839.313 ops/s
Iteration   2: 12198.910 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  12519.112 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1253292520826 as seed for Random
32507.264 ops/s
Iteration   1: 40032.648 ops/s
Iteration   2: 38490.275 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  39261.461 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1266145739771 as seed for Random
52954.764 ops/s
Iteration   1: 58407.570 ops/s
Iteration   2: 59438.562 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  58923.066 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1279004859804 as seed for Random
4811.644 ops/s
Iteration   1: 8029.196 ops/s
Iteration   2: 8032.427 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  8030.811 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1291860177648 as seed for Random
8200.544 ops/s
Iteration   1: 10809.336 ops/s
Iteration   2: 11339.287 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  11074.312 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1304640014045 as seed for Random
4265.155 ops/s
Iteration   1: 5122.259 ops/s
Iteration   2: 5175.646 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  5148.952 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1317466426906 as seed for Random
3105.530 ops/s
Iteration   1: 3483.082 ops/s
Iteration   2: 3574.304 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  3528.693 ops/s


# Run complete. Total time: 00:06:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  87503.313          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  74249.406          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  98840.196          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  88026.722          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  67771.110          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    235.074          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  54628.614          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  57815.825          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  72637.147          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  80625.113          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  69631.930          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   5896.722          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  23762.495          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  33856.569          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  74693.329          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  36314.359          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  40998.551          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  27757.222          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  52321.096          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  16279.803          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  71791.552          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  64271.684          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   5392.025          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   5099.362          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  42980.037          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2  12519.112          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  39261.461          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  58923.066          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   8030.811          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2  11074.312          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   5148.952          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   3528.693          ops/s
