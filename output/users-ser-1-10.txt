# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1079474147666 as seed for Random
62959.088 ops/s
Iteration   1: 65179.603 ops/s
Iteration   2: 68023.171 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  66601.387 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1092614944903 as seed for Random
48193.344 ops/s
Iteration   1: 53134.242 ops/s
Iteration   2: 53292.755 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  53213.499 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1105745904783 as seed for Random
62956.395 ops/s
Iteration   1: 68450.137 ops/s
Iteration   2: 72215.564 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  70332.850 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1118854193315 as seed for Random
61811.019 ops/s
Iteration   1: 64256.370 ops/s
Iteration   2: 65901.010 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  65078.690 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1132026952106 as seed for Random
28964.287 ops/s
Iteration   1: 40055.183 ops/s
Iteration   2: 36693.627 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  38374.405 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1145187670342 as seed for Random
389.373 ops/s
Iteration   1: 218.274 ops/s
Iteration   2: 213.285 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  215.779 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1158505188504 as seed for Random
22611.207 ops/s
Iteration   1: 40233.374 ops/s
Iteration   2: 40255.653 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  40244.513 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1171576413180 as seed for Random
28678.775 ops/s
Iteration   1: 34861.232 ops/s
Iteration   2: 34614.414 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  34737.823 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1184709976296 as seed for Random
46281.308 ops/s
Iteration   1: 53254.205 ops/s
Iteration   2: 53193.509 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  53223.857 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1197881807236 as seed for Random
48526.565 ops/s
Iteration   1: 54047.098 ops/s
Iteration   2: 56805.119 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  55426.109 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1210991233525 as seed for Random
44778.013 ops/s
Iteration   1: 51188.873 ops/s
Iteration   2: 51862.622 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  51525.748 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1224038658681 as seed for Random
4116.997 ops/s
Iteration   1: 5601.279 ops/s
Iteration   2: 5582.815 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  5592.047 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1237117055869 as seed for Random
13859.224 ops/s
Iteration   1: 19545.504 ops/s
Iteration   2: 19153.774 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  19349.639 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1250215224070 as seed for Random
17456.198 ops/s
Iteration   1: 19737.264 ops/s
Iteration   2: 19799.271 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  19768.267 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1263323464332 as seed for Random
40608.179 ops/s
Iteration   1: 52649.135 ops/s
Iteration   2: 53143.059 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  52896.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1276396441047 as seed for Random
22871.117 ops/s
Iteration   1: 28097.427 ops/s
Iteration   2: 27243.378 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  27670.403 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1289529203295 as seed for Random
28592.908 ops/s
Iteration   1: 34186.783 ops/s
Iteration   2: 32525.371 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  33356.077 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1302616654411 as seed for Random
6249.586 ops/s
Iteration   1: 17988.495 ops/s
Iteration   2: 20632.465 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  19310.480 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1315766191111 as seed for Random
21107.215 ops/s
Iteration   1: 34059.848 ops/s
Iteration   2: 32435.334 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  33247.591 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1328867526425 as seed for Random
8814.182 ops/s
Iteration   1: 11215.771 ops/s
Iteration   2: 11053.497 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  11134.634 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1342000774655 as seed for Random
42943.252 ops/s
Iteration   1: 52550.686 ops/s
Iteration   2: 49995.129 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  51272.907 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1355088719497 as seed for Random
39900.679 ops/s
Iteration   1: 53360.880 ops/s
Iteration   2: 57816.869 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  55588.874 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1368163437279 as seed for Random
3330.179 ops/s
Iteration   1: 5118.175 ops/s
Iteration   2: 5359.260 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  5238.717 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1381249299171 as seed for Random
4346.947 ops/s
Iteration   1: 5504.994 ops/s
Iteration   2: 5452.302 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  5478.648 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1394405369212 as seed for Random
17306.615 ops/s
Iteration   1: 26071.621 ops/s
Iteration   2: 25137.562 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  25604.592 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1407518500172 as seed for Random
4310.860 ops/s
Iteration   1: 7707.259 ops/s
Iteration   2: 7781.230 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  7744.244 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1420652048806 as seed for Random
12063.777 ops/s
Iteration   1: 25294.957 ops/s
Iteration   2: 25446.762 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  25370.860 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1433746802067 as seed for Random
25567.632 ops/s
Iteration   1: 29708.523 ops/s
Iteration   2: 27946.594 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  28827.559 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1446838589127 as seed for Random
2894.453 ops/s
Iteration   1: 3299.480 ops/s
Iteration   2: 3522.009 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  3410.745 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1460004605394 as seed for Random
3063.542 ops/s
Iteration   1: 6936.650 ops/s
Iteration   2: 7063.107 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  6999.878 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1473135785675 as seed for Random
2629.356 ops/s
Iteration   1: 3962.273 ops/s
Iteration   2: 3913.209 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  3937.741 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1486310102748 as seed for Random
1951.823 ops/s
Iteration   1: 2122.804 ops/s
Iteration   2: 2431.749 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  2277.277 ops/s


# Run complete. Total time: 00:07:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  66601.387          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  53213.499          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  70332.850          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  65078.690          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  38374.405          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    215.779          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  40244.513          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  34737.823          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  53223.857          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  55426.109          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  51525.748          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   5592.047          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  19349.639          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  19768.267          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  52896.097          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  27670.403          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  33356.077          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  19310.480          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  33247.591          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  11134.634          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  51272.907          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  55588.874          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   5238.717          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   5478.648          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  25604.592          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   7744.244          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  25370.860          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  28827.559          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   3410.745          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   6999.878          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   3937.741          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   2277.277          ops/s
