# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=988532482281 as seed for Random
62668.569 ops/s
Iteration   1: 67374.137 ops/s
Iteration   2: 68253.971 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  67814.054 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1001626991125 as seed for Random
44089.858 ops/s
Iteration   1: 54074.128 ops/s
Iteration   2: 53624.407 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  53849.267 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1014710311926 as seed for Random
72451.332 ops/s
Iteration   1: 76772.798 ops/s
Iteration   2: 82041.385 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  79407.091 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1027729861781 as seed for Random
65566.369 ops/s
Iteration   1: 67500.903 ops/s
Iteration   2: 68402.563 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  67951.733 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1040821409880 as seed for Random
19459.134 ops/s
Iteration   1: 40094.427 ops/s
Iteration   2: 39823.565 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  39958.996 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1053839523048 as seed for Random
383.241 ops/s
Iteration   1: 227.701 ops/s
Iteration   2: 214.526 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  221.114 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1067022957218 as seed for Random
29167.982 ops/s
Iteration   1: 40525.918 ops/s
Iteration   2: 39050.521 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  39788.219 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1080088684205 as seed for Random
29053.185 ops/s
Iteration   1: 31195.790 ops/s
Iteration   2: 31451.676 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  31323.733 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1093157352104 as seed for Random
48394.496 ops/s
Iteration   1: 53883.316 ops/s
Iteration   2: 52099.178 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  52991.247 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1106248442307 as seed for Random
51903.060 ops/s
Iteration   1: 55374.701 ops/s
Iteration   2: 58421.572 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  56898.137 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1119291313899 as seed for Random
52979.691 ops/s
Iteration   1: 59118.537 ops/s
Iteration   2: 62995.537 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  61057.037 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1132333370566 as seed for Random
4916.818 ops/s
Iteration   1: 5602.550 ops/s
Iteration   2: 5826.062 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  5714.306 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1145370582710 as seed for Random
14797.351 ops/s
Iteration   1: 19441.968 ops/s
Iteration   2: 19491.263 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  19466.615 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1158423135447 as seed for Random
16765.387 ops/s
Iteration   1: 20884.431 ops/s
Iteration   2: 20600.315 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  20742.373 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1171443186839 as seed for Random
41145.825 ops/s
Iteration   1: 49973.725 ops/s
Iteration   2: 49313.604 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  49643.664 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1184555954028 as seed for Random
28060.347 ops/s
Iteration   1: 30765.326 ops/s
Iteration   2: 31054.068 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  30909.697 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1197637041718 as seed for Random
39637.528 ops/s
Iteration   1: 41314.710 ops/s
Iteration   2: 40996.232 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  41155.471 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1210683882708 as seed for Random
13151.284 ops/s
Iteration   1: 21968.143 ops/s
Iteration   2: 21878.516 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  21923.330 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1223723332620 as seed for Random
29730.106 ops/s
Iteration   1: 37742.482 ops/s
Iteration   2: 34675.289 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  36208.885 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1236806532898 as seed for Random
8209.232 ops/s
Iteration   1: 10982.020 ops/s
Iteration   2: 10791.535 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  10886.777 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1249869689720 as seed for Random
47012.664 ops/s
Iteration   1: 53169.027 ops/s
Iteration   2: 52201.403 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  52685.215 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1262979218669 as seed for Random
33146.777 ops/s
Iteration   1: 52391.968 ops/s
Iteration   2: 50873.152 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  51632.560 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1276044761833 as seed for Random
3415.670 ops/s
Iteration   1: 5075.476 ops/s
Iteration   2: 5305.323 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  5190.400 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1289064138645 as seed for Random
4737.462 ops/s
Iteration   1: 5285.322 ops/s
Iteration   2: 5047.367 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  5166.345 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1302259598294 as seed for Random
18244.301 ops/s
Iteration   1: 24639.861 ops/s
Iteration   2: 24205.850 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  24422.856 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1315344467569 as seed for Random
4220.429 ops/s
Iteration   1: 7436.067 ops/s
Iteration   2: 7301.243 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  7368.655 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1328422829590 as seed for Random
25499.441 ops/s
Iteration   1: 30148.172 ops/s
Iteration   2: 28777.600 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  29462.886 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1341497464496 as seed for Random
20798.266 ops/s
Iteration   1: 23438.653 ops/s
Iteration   2: 23867.591 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  23653.122 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1354537704666 as seed for Random
3732.687 ops/s
Iteration   1: 6665.991 ops/s
Iteration   2: 6978.050 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  6822.021 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1367631359866 as seed for Random
3861.300 ops/s
Iteration   1: 6853.528 ops/s
Iteration   2: 7466.975 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  7160.252 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1380710487632 as seed for Random
3059.827 ops/s
Iteration   1: 4237.104 ops/s
Iteration   2: 4079.889 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  4158.496 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1393726223576 as seed for Random
2154.231 ops/s
Iteration   1: 2312.115 ops/s
Iteration   2: 2492.771 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  2402.443 ops/s


# Run complete. Total time: 00:06:58

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  67814.054          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  53849.267          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  79407.091          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  67951.733          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  39958.996          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    221.114          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  39788.219          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  31323.733          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  52991.247          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  56898.137          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  61057.037          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   5714.306          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  19466.615          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  20742.373          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  49643.664          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  30909.697          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  41155.471          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  21923.330          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  36208.885          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  10886.777          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  52685.215          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  51632.560          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   5190.400          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   5166.345          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  24422.856          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   7368.655          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  29462.886          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  23653.122          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   6822.021          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   7160.252          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   4158.496          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   2402.443          ops/s
