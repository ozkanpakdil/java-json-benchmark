# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3409909244126 as seed for Random
463277.075 ops/s
Iteration   1: 556884.247 ops/s
Iteration   2: 566187.126 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  561535.686 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3422742943355 as seed for Random
468529.744 ops/s
Iteration   1: 548464.488 ops/s
Iteration   2: 553633.760 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  551049.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3435592576320 as seed for Random
1027996.883 ops/s
Iteration   1: 1119356.658 ops/s
Iteration   2: 1146011.043 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  1132683.851 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3448419825654 as seed for Random
775325.616 ops/s
Iteration   1: 808689.057 ops/s
Iteration   2: 830451.274 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  819570.166 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3461306481689 as seed for Random
201112.129 ops/s
Iteration   1: 344706.170 ops/s
Iteration   2: 354316.957 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  349511.564 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3474193858341 as seed for Random
2185.355 ops/s
Iteration   1: 1193.565 ops/s
Iteration   2: 1139.083 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  1166.324 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3487090977250 as seed for Random
166556.608 ops/s
Iteration   1: 235327.871 ops/s
Iteration   2: 240748.160 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  238038.015 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3499954561777 as seed for Random
266406.100 ops/s
Iteration   1: 361424.495 ops/s
Iteration   2: 355419.634 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  358422.065 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3512790058807 as seed for Random
364821.631 ops/s
Iteration   1: 443328.070 ops/s
Iteration   2: 454786.368 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  449057.219 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3525612752605 as seed for Random
315482.104 ops/s
Iteration   1: 384071.834 ops/s
Iteration   2: 391439.482 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  387755.658 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3538467815255 as seed for Random
517414.906 ops/s
Iteration   1: 596235.750 ops/s
Iteration   2: 617710.476 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  606973.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3551279086390 as seed for Random
53456.984 ops/s
Iteration   1: 62274.332 ops/s
Iteration   2: 61127.336 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  61700.834 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3564107977037 as seed for Random
354133.137 ops/s
Iteration   1: 430634.695 ops/s
Iteration   2: 446213.901 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  438424.298 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3576935299182 as seed for Random
206673.694 ops/s
Iteration   1: 246186.094 ops/s
Iteration   2: 262587.048 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  254386.571 ops/s


# Run complete. Total time: 00:03:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt        Score   Error  Units
Serialization.avajejsonb           thrpt    2   561535.686          ops/s
Serialization.avajejsonb_jackson   thrpt    2   551049.124          ops/s
Serialization.dsljson              thrpt    2  1132683.851          ops/s
Serialization.dsljson_reflection   thrpt    2   819570.166          ops/s
Serialization.fastjson             thrpt    2   349511.564          ops/s
Serialization.flexjson             thrpt    2     1166.324          ops/s
Serialization.genson               thrpt    2   238038.015          ops/s
Serialization.gson                 thrpt    2   358422.065          ops/s
Serialization.jackson              thrpt    2   449057.219          ops/s
Serialization.jackson_afterburner  thrpt    2   387755.658          ops/s
Serialization.jackson_blackbird    thrpt    2   606973.113          ops/s
Serialization.jodd                 thrpt    2    61700.834          ops/s
Serialization.logansquare          thrpt    2   438424.298          ops/s
Serialization.moshi                thrpt    2   254386.571          ops/s
