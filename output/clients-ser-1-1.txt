# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3607054831575 as seed for Random
410393.972 ops/s
Iteration   1: 498476.381 ops/s
Iteration   2: 519196.687 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  508836.534 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3619940467813 as seed for Random
348542.604 ops/s
Iteration   1: 453638.612 ops/s
Iteration   2: 471357.624 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  462498.118 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3632836456453 as seed for Random
891552.796 ops/s
Iteration   1: 968671.485 ops/s
Iteration   2: 1004273.314 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  986472.400 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3645735414840 as seed for Random
702660.940 ops/s
Iteration   1: 777347.290 ops/s
Iteration   2: 804019.193 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  790683.241 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3658617391453 as seed for Random
277332.448 ops/s
Iteration   1: 393216.491 ops/s
Iteration   2: 407334.721 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  400275.606 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3671524382010 as seed for Random
1842.418 ops/s
Iteration   1: 910.659 ops/s
Iteration   2: 970.048 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  940.354 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3684435409603 as seed for Random
254945.746 ops/s
Iteration   1: 306575.486 ops/s
Iteration   2: 320469.416 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  313522.451 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3697325411603 as seed for Random
271172.553 ops/s
Iteration   1: 360741.081 ops/s
Iteration   2: 379423.443 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  370082.262 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3710216599454 as seed for Random
472269.598 ops/s
Iteration   1: 591414.044 ops/s
Iteration   2: 619011.542 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  605212.793 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3723093627492 as seed for Random
360140.450 ops/s
Iteration   1: 462904.830 ops/s
Iteration   2: 487069.970 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  474987.400 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3735962962500 as seed for Random
491186.499 ops/s
Iteration   1: 587877.759 ops/s
Iteration   2: 615225.469 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  601551.614 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3748857080638 as seed for Random
52855.715 ops/s
Iteration   1: 68056.463 ops/s
Iteration   2: 70666.027 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  69361.245 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3761782138354 as seed for Random
415137.518 ops/s
Iteration   1: 511436.834 ops/s
Iteration   2: 535817.090 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  523626.962 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3774641917873 as seed for Random
181823.292 ops/s
Iteration   1: 243412.225 ops/s
Iteration   2: 263815.993 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  253614.109 ops/s


# Run complete. Total time: 00:03:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt       Score   Error  Units
Serialization.avajejsonb           thrpt    2  508836.534          ops/s
Serialization.avajejsonb_jackson   thrpt    2  462498.118          ops/s
Serialization.dsljson              thrpt    2  986472.400          ops/s
Serialization.dsljson_reflection   thrpt    2  790683.241          ops/s
Serialization.fastjson             thrpt    2  400275.606          ops/s
Serialization.flexjson             thrpt    2     940.354          ops/s
Serialization.genson               thrpt    2  313522.451          ops/s
Serialization.gson                 thrpt    2  370082.262          ops/s
Serialization.jackson              thrpt    2  605212.793          ops/s
Serialization.jackson_afterburner  thrpt    2  474987.400          ops/s
Serialization.jackson_blackbird    thrpt    2  601551.614          ops/s
Serialization.jodd                 thrpt    2   69361.245          ops/s
Serialization.logansquare          thrpt    2  523626.962          ops/s
Serialization.moshi                thrpt    2  253614.109          ops/s
