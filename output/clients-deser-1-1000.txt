# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4491969966989 as seed for Random
49.334 ops/s
Iteration   1: 103.133 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  103.133 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 7.69% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4505808087286 as seed for Random
38.993 ops/s
Iteration   1: 90.309 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  90.309 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 15.38% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4520176591781 as seed for Random
293.941 ops/s
Iteration   1: 535.093 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  535.093 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 23.08% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4533496221582 as seed for Random
216.967 ops/s
Iteration   1: 416.676 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  416.676 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 30.77% complete, ETA 00:02:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4546905511456 as seed for Random
10.260 ops/s
Iteration   1: 16.457 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  16.457 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 38.46% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4562784838231 as seed for Random
39.011 ops/s
Iteration   1: 91.115 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  91.115 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 46.15% complete, ETA 00:01:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4576556988135 as seed for Random
37.751 ops/s
Iteration   1: 84.855 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  84.855 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 53.85% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4590351996926 as seed for Random
30.535 ops/s
Iteration   1: 65.583 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  65.583 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 61.54% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4604414019042 as seed for Random
33.641 ops/s
Iteration   1: 58.939 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  58.939 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 69.23% complete, ETA 00:00:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4618640224159 as seed for Random
30.488 ops/s
Iteration   1: 48.337 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  48.337 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 76.92% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4632826700443 as seed for Random
36.480 ops/s
Iteration   1: 77.199 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  77.199 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 84.62% complete, ETA 00:00:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4646916740508 as seed for Random
30.504 ops/s
Iteration   1: 46.862 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  46.862 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.4.1, OpenJDK 64-Bit Server VM, 17.0.4.1+1
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 92.31% complete, ETA 00:00:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4661149009772 as seed for Random
32.116 ops/s
Iteration   1: 77.213 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  77.213 ops/s


# Run complete. Total time: 00:03:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt    Score   Error  Units
Deserialization.avajejsonb           thrpt       103.133          ops/s
Deserialization.avajejsonb_jackson   thrpt        90.309          ops/s
Deserialization.dsljson              thrpt       535.093          ops/s
Deserialization.dsljson_reflection   thrpt       416.676          ops/s
Deserialization.flexjson             thrpt        16.457          ops/s
Deserialization.genson               thrpt        91.115          ops/s
Deserialization.gson                 thrpt        84.855          ops/s
Deserialization.jackson              thrpt        65.583          ops/s
Deserialization.jackson_afterburner  thrpt        58.939          ops/s
Deserialization.jackson_blackbird    thrpt        48.337          ops/s
Deserialization.jodd                 thrpt        77.199          ops/s
Deserialization.logansquare          thrpt        46.862          ops/s
Deserialization.moshi                thrpt        77.213          ops/s
