# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1930967366186 as seed for Random
8035.264 ops/s
Iteration   1: 8234.034 ops/s
Iteration   2: 8777.897 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  8505.965 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1943861645712 as seed for Random
6004.878 ops/s
Iteration   1: 7010.309 ops/s
Iteration   2: 7049.898 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  7030.104 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1956715020154 as seed for Random
8355.817 ops/s
Iteration   1: 9651.560 ops/s
Iteration   2: 9655.517 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  9653.539 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:14
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1969622964910 as seed for Random
7988.879 ops/s
Iteration   1: 8544.378 ops/s
Iteration   2: 8638.524 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  8591.451 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1982491712894 as seed for Random
3018.117 ops/s
Iteration   1: 3330.973 ops/s
Iteration   2: 3329.030 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  3330.001 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1995392132939 as seed for Random
120.447 ops/s
Iteration   1: 76.267 ops/s
Iteration   2: 75.013 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  75.640 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2008623851614 as seed for Random
4046.258 ops/s
Iteration   1: 5104.768 ops/s
Iteration   2: 5135.776 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  5120.272 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2021509531012 as seed for Random
3973.838 ops/s
Iteration   1: 4869.414 ops/s
Iteration   2: 4655.578 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  4762.496 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:10
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2034452547817 as seed for Random
5862.407 ops/s
Iteration   1: 6454.734 ops/s
Iteration   2: 6665.237 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  6559.985 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2047325908816 as seed for Random
6829.033 ops/s
Iteration   1: 7503.240 ops/s
Iteration   2: 7506.094 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  7504.667 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2060189894275 as seed for Random
5899.535 ops/s
Iteration   1: 6784.339 ops/s
Iteration   2: 6725.754 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  6755.047 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2073043889113 as seed for Random
594.093 ops/s
Iteration   1: 704.413 ops/s
Iteration   2: 707.642 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  706.028 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2085951539845 as seed for Random
1902.971 ops/s
Iteration   1: 2351.325 ops/s
Iteration   2: 2380.179 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  2365.752 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2098805187000 as seed for Random
2133.708 ops/s
Iteration   1: 2232.384 ops/s
Iteration   2: 2285.519 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  2258.951 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2111665684403 as seed for Random
5840.623 ops/s
Iteration   1: 7236.942 ops/s
Iteration   2: 7158.693 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  7197.818 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2124519790967 as seed for Random
2667.979 ops/s
Iteration   1: 3470.262 ops/s
Iteration   2: 3439.308 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  3454.785 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2137420842757 as seed for Random
3701.534 ops/s
Iteration   1: 4422.880 ops/s
Iteration   2: 4417.834 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  4420.357 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2150302097764 as seed for Random
1546.452 ops/s
Iteration   1: 2852.180 ops/s
Iteration   2: 2807.357 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  2829.769 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2163153888762 as seed for Random
3811.231 ops/s
Iteration   1: 4906.213 ops/s
Iteration   2: 4928.271 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  4917.242 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2176023144501 as seed for Random
1347.145 ops/s
Iteration   1: 1555.274 ops/s
Iteration   2: 1550.975 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  1553.124 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2188854922018 as seed for Random
6010.855 ops/s
Iteration   1: 6886.187 ops/s
Iteration   2: 6902.310 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  6894.249 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2201709818473 as seed for Random
5329.959 ops/s
Iteration   1: 6876.702 ops/s
Iteration   2: 6882.911 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  6879.807 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2214608332633 as seed for Random
473.628 ops/s
Iteration   1: 661.405 ops/s
Iteration   2: 678.706 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  670.055 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2227536311793 as seed for Random
470.189 ops/s
Iteration   1: 585.367 ops/s
Iteration   2: 590.418 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  587.893 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2240491306460 as seed for Random
2048.369 ops/s
Iteration   1: 2706.644 ops/s
Iteration   2: 2720.778 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  2713.711 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2253394009104 as seed for Random
762.751 ops/s
Iteration   1: 1102.267 ops/s
Iteration   2: 1111.926 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  1107.097 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2266313085379 as seed for Random
2034.625 ops/s
Iteration   1: 3559.412 ops/s
Iteration   2: 3545.975 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  3552.693 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2279153137203 as seed for Random
2381.281 ops/s
Iteration   1: 2592.861 ops/s
Iteration   2: 2571.364 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  2582.113 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2292070150468 as seed for Random
520.339 ops/s
Iteration   1: 851.422 ops/s
Iteration   2: 852.246 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  851.834 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2304952338867 as seed for Random
548.742 ops/s
Iteration   1: 743.218 ops/s
Iteration   2: 816.502 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  779.860 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2317878069487 as seed for Random
417.587 ops/s
Iteration   1: 512.298 ops/s
Iteration   2: 510.202 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  511.250 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2330804628196 as seed for Random
111.074 ops/s
Iteration   1: 125.405 ops/s
Iteration   2: 104.938 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  115.171 ops/s


# Run complete. Total time: 00:06:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  8505.965          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  7030.104          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  9653.539          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  8591.451          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  3330.001          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    75.640          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  5120.272          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  4762.496          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  6559.985          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  7504.667          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  6755.047          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   706.028          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  2365.752          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  2258.951          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  7197.818          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  3454.785          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  4420.357          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  2829.769          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  4917.242          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  1553.124          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  6894.249          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  6879.807          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   670.055          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   587.893          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  2713.711          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2  1107.097          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  3552.693          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  2582.113          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   851.834          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   779.860          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   511.250          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   115.171          ops/s
