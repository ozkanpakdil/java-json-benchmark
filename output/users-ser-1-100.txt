# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1741684203674 as seed for Random
8482.634 ops/s
Iteration   1: 8959.849 ops/s
Iteration   2: 8866.525 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  8913.187 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1754531347026 as seed for Random
6000.128 ops/s
Iteration   1: 6824.125 ops/s
Iteration   2: 6860.128 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  6842.127 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1767333120388 as seed for Random
9168.208 ops/s
Iteration   1: 9537.968 ops/s
Iteration   2: 9598.741 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  9568.354 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1780178391475 as seed for Random
8142.614 ops/s
Iteration   1: 8334.111 ops/s
Iteration   2: 8382.363 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  8358.237 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1792998936178 as seed for Random
2735.958 ops/s
Iteration   1: 3286.272 ops/s
Iteration   2: 3286.365 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  3286.318 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1805889151506 as seed for Random
130.803 ops/s
Iteration   1: 91.482 ops/s
Iteration   2: 85.508 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  88.495 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1819062831260 as seed for Random
4334.840 ops/s
Iteration   1: 5706.082 ops/s
Iteration   2: 5720.512 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  5713.297 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1831843269375 as seed for Random
4948.187 ops/s
Iteration   1: 5937.843 ops/s
Iteration   2: 5956.832 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  5947.338 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1844667708990 as seed for Random
6787.171 ops/s
Iteration   1: 6896.415 ops/s
Iteration   2: 6738.877 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  6817.646 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1857509016725 as seed for Random
7213.855 ops/s
Iteration   1: 7878.432 ops/s
Iteration   2: 7937.425 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  7907.929 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1870308828004 as seed for Random
6618.554 ops/s
Iteration   1: 7541.357 ops/s
Iteration   2: 7507.501 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  7524.429 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1883108286523 as seed for Random
510.692 ops/s
Iteration   1: 589.774 ops/s
Iteration   2: 582.419 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  586.096 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1895973705899 as seed for Random
1856.964 ops/s
Iteration   1: 2235.244 ops/s
Iteration   2: 2237.732 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  2236.488 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1908790756601 as seed for Random
1951.308 ops/s
Iteration   1: 2057.479 ops/s
Iteration   2: 2044.166 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  2050.822 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1921606093529 as seed for Random
6202.574 ops/s
Iteration   1: 7010.872 ops/s
Iteration   2: 7083.590 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  7047.231 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1934418115722 as seed for Random
3157.376 ops/s
Iteration   1: 3943.396 ops/s
Iteration   2: 3944.006 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  3943.701 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1947287748046 as seed for Random
2896.307 ops/s
Iteration   1: 3760.017 ops/s
Iteration   2: 3767.119 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  3763.568 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1960087637754 as seed for Random
1208.317 ops/s
Iteration   1: 3015.875 ops/s
Iteration   2: 3047.203 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  3031.539 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1972912738149 as seed for Random
4432.854 ops/s
Iteration   1: 5459.435 ops/s
Iteration   2: 5471.184 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  5465.310 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1985747637109 as seed for Random
1503.026 ops/s
Iteration   1: 1702.970 ops/s
Iteration   2: 1711.732 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  1707.351 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1998620543946 as seed for Random
6154.752 ops/s
Iteration   1: 6920.661 ops/s
Iteration   2: 6942.979 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  6931.820 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2011464442658 as seed for Random
5105.062 ops/s
Iteration   1: 7059.618 ops/s
Iteration   2: 7037.735 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  7048.676 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2024318380717 as seed for Random
433.078 ops/s
Iteration   1: 536.671 ops/s
Iteration   2: 545.337 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  541.004 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2037149019502 as seed for Random
447.701 ops/s
Iteration   1: 513.516 ops/s
Iteration   2: 516.148 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  514.832 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2050004424863 as seed for Random
2057.059 ops/s
Iteration   1: 2582.554 ops/s
Iteration   2: 2586.392 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  2584.473 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2062817985225 as seed for Random
735.891 ops/s
Iteration   1: 1134.101 ops/s
Iteration   2: 1125.959 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  1130.030 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2075677847992 as seed for Random
2963.137 ops/s
Iteration   1: 3652.341 ops/s
Iteration   2: 3616.052 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  3634.196 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2088545862289 as seed for Random
1964.599 ops/s
Iteration   1: 2253.611 ops/s
Iteration   2: 2226.336 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  2239.973 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2101374720381 as seed for Random
589.096 ops/s
Iteration   1: 758.203 ops/s
Iteration   2: 755.094 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  756.649 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2114248737366 as seed for Random
802.988 ops/s
Iteration   1: 825.041 ops/s
Iteration   2: 888.111 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  856.576 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2127084149213 as seed for Random
391.958 ops/s
Iteration   1: 465.084 ops/s
Iteration   2: 462.965 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  464.025 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2140004627327 as seed for Random
124.191 ops/s
Iteration   1: 137.156 ops/s
Iteration   2: 133.352 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  135.254 ops/s


# Run complete. Total time: 00:06:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  8913.187          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  6842.127          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  9568.354          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  8358.237          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  3286.318          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    88.495          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  5713.297          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  5947.338          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  6817.646          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  7907.929          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  7524.429          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   586.096          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  2236.488          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  2050.822          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  7047.231          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  3943.701          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  3763.568          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  3031.539          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  5465.310          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  1707.351          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  6931.820          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  7048.676          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   541.004          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   514.832          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  2584.473          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2  1130.030          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  3634.196          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  2239.973          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   756.649          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   856.576          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   464.025          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2   135.254          ops/s
