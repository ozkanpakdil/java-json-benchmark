# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1826774217048 as seed for Random
6671.790 ops/s
Iteration   1: 6957.633 ops/s
Iteration   2: 6967.578 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  6962.606 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1839918037231 as seed for Random
4234.528 ops/s
Iteration   1: 5150.492 ops/s
Iteration   2: 5158.973 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  5154.732 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1852944578454 as seed for Random
7253.752 ops/s
Iteration   1: 8067.913 ops/s
Iteration   2: 8414.061 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  8240.987 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1866014712432 as seed for Random
6308.777 ops/s
Iteration   1: 7125.511 ops/s
Iteration   2: 6919.820 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  7022.665 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1879074028889 as seed for Random
1900.791 ops/s
Iteration   1: 2937.941 ops/s
Iteration   2: 2975.212 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  2956.577 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1892157832378 as seed for Random
109.406 ops/s
Iteration   1: 73.315 ops/s
Iteration   2: 71.822 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  72.568 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 18.75% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1905730610831 as seed for Random
3252.625 ops/s
Iteration   1: 3408.560 ops/s
Iteration   2: 3575.395 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  3491.978 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 21.88% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1918790996172 as seed for Random
2839.062 ops/s
Iteration   1: 3305.630 ops/s
Iteration   2: 3330.839 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  3318.235 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 25.00% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1931888848648 as seed for Random
4984.363 ops/s
Iteration   1: 5350.637 ops/s
Iteration   2: 5620.902 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  5485.770 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1944973220704 as seed for Random
4750.588 ops/s
Iteration   1: 5059.694 ops/s
Iteration   2: 5576.268 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  5317.981 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1958049929132 as seed for Random
4841.944 ops/s
Iteration   1: 5786.115 ops/s
Iteration   2: 5720.928 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  5753.522 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 34.38% complete, ETA 00:04:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1971099247203 as seed for Random
480.432 ops/s
Iteration   1: 560.217 ops/s
Iteration   2: 537.267 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  548.742 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1984217275909 as seed for Random
1560.886 ops/s
Iteration   1: 1922.641 ops/s
Iteration   2: 1960.728 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.johnzon":
  1941.685 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1997233761724 as seed for Random
1741.803 ops/s
Iteration   1: 1970.866 ops/s
Iteration   2: 1917.353 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart":
  1944.109 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2010297165693 as seed for Random
4544.028 ops/s
Iteration   1: 5908.396 ops/s
Iteration   2: 5758.284 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  5833.340 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 46.88% complete, ETA 00:03:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2023421823290 as seed for Random
2171.524 ops/s
Iteration   1: 2926.993 ops/s
Iteration   2: 2899.676 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  2913.335 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.qson

# Run progress: 50.00% complete, ETA 00:03:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2036505459252 as seed for Random
2619.057 ops/s
Iteration   1: 3001.269 ops/s
Iteration   2: 3020.066 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.qson":
  3010.667 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.yasson

# Run progress: 53.13% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2049639824001 as seed for Random
1279.277 ops/s
Iteration   1: 2194.193 ops/s
Iteration   2: 2270.351 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.yasson":
  2232.272 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2062789540451 as seed for Random
2645.115 ops/s
Iteration   1: 3486.562 ops/s
Iteration   2: 3564.485 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.genson":
  3525.523 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2075984016780 as seed for Random
873.797 ops/s
Iteration   1: 1122.395 ops/s
Iteration   2: 1119.015 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.gson":
  1120.705 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2089125428900 as seed for Random
4537.042 ops/s
Iteration   1: 5196.052 ops/s
Iteration   2: 5255.072 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jackson":
  5225.562 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2102302193474 as seed for Random
3651.988 ops/s
Iteration   1: 5260.700 ops/s
Iteration   2: 5291.766 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.javaxjson":
  5276.233 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2115406338694 as seed for Random
428.456 ops/s
Iteration   1: 496.431 ops/s
Iteration   2: 510.358 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonio":
  503.395 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2128570598204 as seed for Random
457.543 ops/s
Iteration   1: 670.733 ops/s
Iteration   2: 663.449 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple":
  667.091 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2141741983656 as seed for Random
1531.303 ops/s
Iteration   1: 2128.598 ops/s
Iteration   2: 2160.917 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.minimaljson":
  2144.757 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2154895284510 as seed for Random
493.570 ops/s
Iteration   1: 793.083 ops/s
Iteration   2: 781.743 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.mjson":
  787.413 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2168087514165 as seed for Random
1094.361 ops/s
Iteration   1: 2549.868 ops/s
Iteration   2: 2537.746 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.moshi":
  2543.807 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2181186234712 as seed for Random
1997.801 ops/s
Iteration   1: 2285.712 ops/s
Iteration   2: 2343.235 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.nanojson":
  2314.473 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2194298208626 as seed for Random
367.169 ops/s
Iteration   1: 627.297 ops/s
Iteration   2: 665.006 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.orgjson":
  646.152 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2207467880889 as seed for Random
315.822 ops/s
Iteration   1: 571.516 ops/s
Iteration   2: 567.538 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.purejson":
  569.527 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2220592016428 as seed for Random
295.602 ops/s
Iteration   1: 415.782 ops/s
Iteration   2: 402.478 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.tapestry":
  409.130 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Serialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=2233810439947 as seed for Random
78.435 ops/s
Iteration   1: 94.301 ops/s
Iteration   2: 92.835 ops/s


Result "com.github.fabienrenaud.jjb.stream.Serialization.underscore_java":
  93.568 ops/s


# Run complete. Total time: 00:07:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt     Score   Error  Units
c.g.f.j.databind.Serialization.avajejsonb           thrpt    2  6962.606          ops/s
c.g.f.j.databind.Serialization.avajejsonb_jackson   thrpt    2  5154.732          ops/s
c.g.f.j.databind.Serialization.dsljson              thrpt    2  8240.987          ops/s
c.g.f.j.databind.Serialization.dsljson_reflection   thrpt    2  7022.665          ops/s
c.g.f.j.databind.Serialization.fastjson             thrpt    2  2956.577          ops/s
c.g.f.j.databind.Serialization.flexjson             thrpt    2    72.568          ops/s
c.g.f.j.databind.Serialization.genson               thrpt    2  3491.978          ops/s
c.g.f.j.databind.Serialization.gson                 thrpt    2  3318.235          ops/s
c.g.f.j.databind.Serialization.jackson              thrpt    2  5485.770          ops/s
c.g.f.j.databind.Serialization.jackson_afterburner  thrpt    2  5317.981          ops/s
c.g.f.j.databind.Serialization.jackson_blackbird    thrpt    2  5753.522          ops/s
c.g.f.j.databind.Serialization.jodd                 thrpt    2   548.742          ops/s
c.g.f.j.databind.Serialization.johnzon              thrpt    2  1941.685          ops/s
c.g.f.j.databind.Serialization.jsonsmart            thrpt    2  1944.109          ops/s
c.g.f.j.databind.Serialization.logansquare          thrpt    2  5833.340          ops/s
c.g.f.j.databind.Serialization.moshi                thrpt    2  2913.335          ops/s
c.g.f.j.databind.Serialization.qson                 thrpt    2  3010.667          ops/s
c.g.f.j.databind.Serialization.yasson               thrpt    2  2232.272          ops/s
c.g.f.j.stream.Serialization.genson                 thrpt    2  3525.523          ops/s
c.g.f.j.stream.Serialization.gson                   thrpt    2  1120.705          ops/s
c.g.f.j.stream.Serialization.jackson                thrpt    2  5225.562          ops/s
c.g.f.j.stream.Serialization.javaxjson              thrpt    2  5276.233          ops/s
c.g.f.j.stream.Serialization.jsonio                 thrpt    2   503.395          ops/s
c.g.f.j.stream.Serialization.jsonsimple             thrpt    2   667.091          ops/s
c.g.f.j.stream.Serialization.minimaljson            thrpt    2  2144.757          ops/s
c.g.f.j.stream.Serialization.mjson                  thrpt    2   787.413          ops/s
c.g.f.j.stream.Serialization.moshi                  thrpt    2  2543.807          ops/s
c.g.f.j.stream.Serialization.nanojson               thrpt    2  2314.473          ops/s
c.g.f.j.stream.Serialization.orgjson                thrpt    2   646.152          ops/s
c.g.f.j.stream.Serialization.purejson               thrpt    2   569.527          ops/s
c.g.f.j.stream.Serialization.tapestry               thrpt    2   409.130          ops/s
c.g.f.j.stream.Serialization.underscore_java        thrpt    2    93.568          ops/s
