# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1500475868724 as seed for Random
39820.658 ops/s
Iteration   1: 51157.838 ops/s
Iteration   2: 50973.772 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  51065.805 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1513650731550 as seed for Random
23420.462 ops/s
Iteration   1: 36582.716 ops/s
Iteration   2: 35285.378 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  35934.047 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1526755497048 as seed for Random
50463.169 ops/s
Iteration   1: 59180.718 ops/s
Iteration   2: 59624.911 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  59402.814 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1539949681012 as seed for Random
32281.515 ops/s
Iteration   1: 46048.009 ops/s
Iteration   2: 44332.162 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  45190.086 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1553182593258 as seed for Random
20063.265 ops/s
Iteration   1: 30200.753 ops/s
Iteration   2: 29654.940 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  29927.847 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1566349666850 as seed for Random
1897.599 ops/s
Iteration   1: 3651.142 ops/s
Iteration   2: 3932.234 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  3791.688 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1579502140516 as seed for Random
17888.060 ops/s
Iteration   1: 27965.574 ops/s
Iteration   2: 27578.773 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  27772.173 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1592618122689 as seed for Random
23632.015 ops/s
Iteration   1: 29568.961 ops/s
Iteration   2: 28859.717 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  29214.339 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1605770150897 as seed for Random
25712.367 ops/s
Iteration   1: 33779.541 ops/s
Iteration   2: 31343.617 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  32561.579 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1618891437565 as seed for Random
33689.852 ops/s
Iteration   1: 41254.100 ops/s
Iteration   2: 39281.488 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  40267.794 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1631980800746 as seed for Random
30548.141 ops/s
Iteration   1: 39337.034 ops/s
Iteration   2: 38122.781 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  38729.908 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1645103107441 as seed for Random
19013.186 ops/s
Iteration   1: 25635.823 ops/s
Iteration   2: 24655.972 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  25145.898 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1658220704908 as seed for Random
5826.908 ops/s
Iteration   1: 8398.144 ops/s
Iteration   2: 8590.705 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  8494.425 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1671303308246 as seed for Random
26219.035 ops/s
Iteration   1: 30786.383 ops/s
Iteration   2: 31166.896 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  30976.639 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1684375087979 as seed for Random
25058.450 ops/s
Iteration   1: 33093.133 ops/s
Iteration   2: 32041.582 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  32567.357 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1697489121650 as seed for Random
20431.891 ops/s
Iteration   1: 25893.037 ops/s
Iteration   2: 25128.505 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  25510.771 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1710585783438 as seed for Random
26111.242 ops/s
Iteration   1: 34830.520 ops/s
Iteration   2: 31443.520 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  33137.020 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1723675765773 as seed for Random
3107.476 ops/s
Iteration   1: 5992.455 ops/s
Iteration   2: 5848.294 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  5920.375 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1736764761618 as seed for Random
15592.628 ops/s
Iteration   1: 28607.951 ops/s
Iteration   2: 28674.158 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  28641.055 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1749918586707 as seed for Random
7007.795 ops/s
Iteration   1: 19266.098 ops/s
Iteration   2: 19293.524 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  19279.811 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1763022770060 as seed for Random
26410.484 ops/s
Iteration   1: 40496.109 ops/s
Iteration   2: 39851.210 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  40173.660 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1776142232685 as seed for Random
6841.314 ops/s
Iteration   1: 8927.360 ops/s
Iteration   2: 10242.213 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  9584.787 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1789250386765 as seed for Random
3107.941 ops/s
Iteration   1: 4703.342 ops/s
Iteration   2: 5315.386 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  5009.364 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1802460048524 as seed for Random
5140.105 ops/s
Iteration   1: 8669.100 ops/s
Iteration   2: 8740.098 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  8704.599 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1815570733082 as seed for Random
3470.237 ops/s
Iteration   1: 11483.674 ops/s
Iteration   2: 18107.177 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  14795.425 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1828659470968 as seed for Random
4817.558 ops/s
Iteration   1: 5626.609 ops/s
Iteration   2: 5653.701 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  5640.155 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1841735528598 as seed for Random
12312.709 ops/s
Iteration   1: 20825.536 ops/s
Iteration   2: 20558.612 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  20692.074 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1854807870472 as seed for Random
13541.544 ops/s
Iteration   1: 18057.213 ops/s
Iteration   2: 18029.859 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  18043.536 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1867889995668 as seed for Random
4720.078 ops/s
Iteration   1: 5594.495 ops/s
Iteration   2: 5811.678 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  5703.086 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1881037470294 as seed for Random
3282.262 ops/s
Iteration   1: 6172.858 ops/s
Iteration   2: 6126.662 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  6149.760 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1894116797789 as seed for Random
15973.717 ops/s
Iteration   1: 26196.826 ops/s
Iteration   2: 26709.740 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  26453.283 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1907209394996 as seed for Random
17300.518 ops/s
Iteration   1: 22625.023 ops/s
Iteration   2: 23972.470 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  23298.747 ops/s


# Run complete. Total time: 00:06:59

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  51065.805          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  35934.047          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  59402.814          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  45190.086          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  29927.847          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   3791.688          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  27772.173          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  29214.339          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  32561.579          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  40267.794          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  38729.908          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  25145.898          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   8494.425          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  30976.639          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  32567.357          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  25510.771          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  33137.020          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   5920.375          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  28641.055          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  19279.811          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  40173.660          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2   9584.787          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   5009.364          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2   8704.599          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  14795.425          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   5640.155          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  20692.074          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  18043.536          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   5703.086          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   6149.760          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  26453.283          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  23298.747          ops/s
