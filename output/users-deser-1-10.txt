# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1330962874131 as seed for Random
62771.368 ops/s
Iteration   1: 70349.325 ops/s
Iteration   2: 70779.018 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  70564.172 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1343848052857 as seed for Random
39254.303 ops/s
Iteration   1: 49090.531 ops/s
Iteration   2: 49535.419 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  49312.975 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1356698393425 as seed for Random
72711.482 ops/s
Iteration   1: 81184.643 ops/s
Iteration   2: 82922.093 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  82053.368 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1369542645224 as seed for Random
60328.053 ops/s
Iteration   1: 66251.286 ops/s
Iteration   2: 68574.163 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  67412.724 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1382358549567 as seed for Random
28721.522 ops/s
Iteration   1: 35519.178 ops/s
Iteration   2: 35642.520 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  35580.849 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1395163675815 as seed for Random
3126.037 ops/s
Iteration   1: 4629.096 ops/s
Iteration   2: 4624.075 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  4626.585 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1407965413213 as seed for Random
29831.693 ops/s
Iteration   1: 37631.361 ops/s
Iteration   2: 37385.936 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  37508.649 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1420817275908 as seed for Random
36165.408 ops/s
Iteration   1: 40691.802 ops/s
Iteration   2: 40387.406 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  40539.604 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1433617977334 as seed for Random
39290.395 ops/s
Iteration   1: 47655.067 ops/s
Iteration   2: 46508.968 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  47082.017 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1446412869516 as seed for Random
49256.014 ops/s
Iteration   1: 58302.556 ops/s
Iteration   2: 58938.703 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  58620.630 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1459224634934 as seed for Random
44049.034 ops/s
Iteration   1: 51727.268 ops/s
Iteration   2: 51335.897 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  51531.582 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1472030189519 as seed for Random
27296.784 ops/s
Iteration   1: 32943.554 ops/s
Iteration   2: 31927.103 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  32435.329 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1484822640160 as seed for Random
7576.517 ops/s
Iteration   1: 9337.762 ops/s
Iteration   2: 9363.410 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  9350.586 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1497612334283 as seed for Random
45116.441 ops/s
Iteration   1: 51021.492 ops/s
Iteration   2: 51315.728 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  51168.610 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1510411406293 as seed for Random
38324.671 ops/s
Iteration   1: 47430.941 ops/s
Iteration   2: 45829.574 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  46630.257 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1523189805150 as seed for Random
28317.815 ops/s
Iteration   1: 33485.157 ops/s
Iteration   2: 32307.391 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  32896.274 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1535983263121 as seed for Random
34732.797 ops/s
Iteration   1: 43305.130 ops/s
Iteration   2: 41870.005 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  42587.568 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1548768941112 as seed for Random
4922.409 ops/s
Iteration   1: 6888.567 ops/s
Iteration   2: 6896.274 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  6892.420 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1561606540794 as seed for Random
29761.602 ops/s
Iteration   1: 38821.405 ops/s
Iteration   2: 38218.955 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  38520.180 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1574398296229 as seed for Random
18969.003 ops/s
Iteration   1: 27116.211 ops/s
Iteration   2: 27219.487 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  27167.849 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1587186151172 as seed for Random
41152.892 ops/s
Iteration   1: 50468.774 ops/s
Iteration   2: 49988.557 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  50228.665 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1600010559535 as seed for Random
14513.246 ops/s
Iteration   1: 22628.875 ops/s
Iteration   2: 22282.013 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  22455.444 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1612843795568 as seed for Random
3785.097 ops/s
Iteration   1: 5255.876 ops/s
Iteration   2: 5373.666 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  5314.771 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1625632063436 as seed for Random
10188.708 ops/s
Iteration   1: 12877.917 ops/s
Iteration   2: 13048.799 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  12963.358 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1638443566142 as seed for Random
14585.480 ops/s
Iteration   1: 24597.712 ops/s
Iteration   2: 24606.870 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  24602.291 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1651279691473 as seed for Random
5296.385 ops/s
Iteration   1: 5944.738 ops/s
Iteration   2: 5885.867 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  5915.303 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1664110251540 as seed for Random
23345.068 ops/s
Iteration   1: 31829.078 ops/s
Iteration   2: 30545.391 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  31187.235 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1676924459429 as seed for Random
21373.591 ops/s
Iteration   1: 25129.298 ops/s
Iteration   2: 25031.424 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  25080.361 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1689721766942 as seed for Random
5158.876 ops/s
Iteration   1: 5688.402 ops/s
Iteration   2: 5642.444 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  5665.423 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1702501209109 as seed for Random
6893.329 ops/s
Iteration   1: 8728.227 ops/s
Iteration   2: 8722.906 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  8725.567 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1715332057727 as seed for Random
29050.085 ops/s
Iteration   1: 41468.581 ops/s
Iteration   2: 40833.462 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  41151.022 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1728166135586 as seed for Random
25382.855 ops/s
Iteration   1: 33273.594 ops/s
Iteration   2: 32912.725 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  33093.159 ops/s


# Run complete. Total time: 00:06:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  70564.172          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  49312.975          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  82053.368          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  67412.724          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  35580.849          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   4626.585          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  37508.649          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  40539.604          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  47082.017          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  58620.630          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  51531.582          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  32435.329          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   9350.586          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  51168.610          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  46630.257          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  32896.274          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  42587.568          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   6892.420          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  38520.180          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  27167.849          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  50228.665          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  22455.444          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   5314.771          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  12963.358          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  24602.291          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   5915.303          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  31187.235          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  25080.361          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   5665.423          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   8725.567          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  41151.022          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  33093.159          ops/s
