# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1519036681505 as seed for Random
48035.682 ops/s
Iteration   1: 68072.201 ops/s
Iteration   2: 63898.356 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  65985.279 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.13% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1531894316172 as seed for Random
38097.631 ops/s
Iteration   1: 47808.918 ops/s
Iteration   2: 47620.114 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  47714.516 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 6.25% complete, ETA 00:06:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1544743359692 as seed for Random
59603.386 ops/s
Iteration   1: 74048.712 ops/s
Iteration   2: 75783.146 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  74915.929 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 9.38% complete, ETA 00:06:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1557558088060 as seed for Random
44879.217 ops/s
Iteration   1: 57804.944 ops/s
Iteration   2: 58534.877 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  58169.911 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 12.50% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1570383931674 as seed for Random
31290.040 ops/s
Iteration   1: 41787.528 ops/s
Iteration   2: 41817.422 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  41802.475 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 15.63% complete, ETA 00:05:46
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1583231920133 as seed for Random
3187.694 ops/s
Iteration   1: 5518.939 ops/s
Iteration   2: 5541.590 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  5530.265 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 18.75% complete, ETA 00:05:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1596062844196 as seed for Random
28894.209 ops/s
Iteration   1: 35447.145 ops/s
Iteration   2: 35278.029 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  35362.587 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 21.88% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1608922783396 as seed for Random
32556.381 ops/s
Iteration   1: 38249.319 ops/s
Iteration   2: 37623.529 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  37936.424 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 25.00% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1621790824121 as seed for Random
33171.320 ops/s
Iteration   1: 45133.216 ops/s
Iteration   2: 43657.721 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  44395.469 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 28.13% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1634600784611 as seed for Random
43237.401 ops/s
Iteration   1: 52499.918 ops/s
Iteration   2: 52311.826 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  52405.872 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 31.25% complete, ETA 00:04:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1647435545064 as seed for Random
44561.693 ops/s
Iteration   1: 50755.555 ops/s
Iteration   2: 51156.911 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  50956.233 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 34.38% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1660269383418 as seed for Random
28960.917 ops/s
Iteration   1: 35837.264 ops/s
Iteration   2: 34872.541 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  35354.903 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 37.50% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1673136394294 as seed for Random
6964.828 ops/s
Iteration   1: 8970.350 ops/s
Iteration   2: 9003.700 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  8987.025 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 40.63% complete, ETA 00:04:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1685983358857 as seed for Random
42862.673 ops/s
Iteration   1: 47285.237 ops/s
Iteration   2: 47485.853 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  47385.545 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 43.75% complete, ETA 00:03:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1698836389078 as seed for Random
37299.953 ops/s
Iteration   1: 45991.955 ops/s
Iteration   2: 45314.844 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  45653.399 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 46.88% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1711690051670 as seed for Random
23857.704 ops/s
Iteration   1: 30234.312 ops/s
Iteration   2: 29106.461 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  29670.387 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.qson

# Run progress: 50.00% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1724574359227 as seed for Random
36450.447 ops/s
Iteration   1: 44287.757 ops/s
Iteration   2: 41850.116 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.qson":
  43068.937 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 53.13% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1737408429916 as seed for Random
4382.732 ops/s
Iteration   1: 7091.358 ops/s
Iteration   2: 7115.494 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  7103.426 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 56.25% complete, ETA 00:02:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1750251529991 as seed for Random
29950.475 ops/s
Iteration   1: 39683.222 ops/s
Iteration   2: 39283.171 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  39483.196 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 59.38% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1763154495691 as seed for Random
19115.496 ops/s
Iteration   1: 29486.803 ops/s
Iteration   2: 28174.604 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  28830.703 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 62.50% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1775989456531 as seed for Random
31825.830 ops/s
Iteration   1: 50861.226 ops/s
Iteration   2: 50966.862 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  50914.044 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 65.63% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1788865581502 as seed for Random
11658.801 ops/s
Iteration   1: 20392.292 ops/s
Iteration   2: 20733.523 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  20562.908 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 68.75% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1801699875966 as seed for Random
3807.157 ops/s
Iteration   1: 6418.655 ops/s
Iteration   2: 6646.929 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  6532.792 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 71.88% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1814537060073 as seed for Random
9802.697 ops/s
Iteration   1: 12083.161 ops/s
Iteration   2: 12278.433 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  12180.797 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1827395314695 as seed for Random
17837.388 ops/s
Iteration   1: 26228.353 ops/s
Iteration   2: 25904.459 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  26066.406 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.13% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1840295019216 as seed for Random
5982.100 ops/s
Iteration   1: 7114.934 ops/s
Iteration   2: 7144.667 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  7129.801 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.25% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1853154466797 as seed for Random
13458.348 ops/s
Iteration   1: 29559.891 ops/s
Iteration   2: 28802.178 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  29181.035 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.38% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1865997376979 as seed for Random
19385.877 ops/s
Iteration   1: 22919.724 ops/s
Iteration   2: 22789.430 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  22854.577 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.50% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1878833502416 as seed for Random
6338.320 ops/s
Iteration   1: 7273.892 ops/s
Iteration   2: 7297.149 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  7285.521 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.63% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1891643203605 as seed for Random
7055.082 ops/s
Iteration   1: 9315.954 ops/s
Iteration   2: 9377.832 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  9346.893 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.75% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1904534653468 as seed for Random
30743.577 ops/s
Iteration   1: 38847.286 ops/s
Iteration   2: 38036.259 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  38441.773 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.88% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=1917388157496 as seed for Random
24359.908 ops/s
Iteration   1: 32831.379 ops/s
Iteration   2: 32595.454 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  32713.417 ops/s


# Run complete. Total time: 00:06:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt      Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt    2  65985.279          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt    2  47714.516          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt    2  74915.929          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt    2  58169.911          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt    2  41802.475          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt    2   5530.265          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt    2  35362.587          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt    2  37936.424          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt    2  44395.469          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt    2  52405.872          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt    2  50956.233          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt    2  35354.903          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt    2   8987.025          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt    2  47385.545          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt    2  45653.399          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt    2  29670.387          ops/s
c.g.f.j.databind.Deserialization.qson                 thrpt    2  43068.937          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt    2   7103.426          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt    2  39483.196          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt    2  28830.703          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt    2  50914.044          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt    2  20562.908          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt    2   6532.792          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt    2  12180.797          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt    2  26066.406          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt    2   7129.801          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt    2  29181.035          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt    2  22854.577          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt    2   7285.521          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt    2   9346.893          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt    2  38441.773          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt    2  32713.417          ops/s
