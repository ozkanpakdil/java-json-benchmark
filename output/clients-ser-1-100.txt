# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4332642049103 as seed for Random
3883.557 ops/s
Iteration   1: 4669.027 ops/s
Iteration   2: 4704.898 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  4686.963 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4345565043313 as seed for Random
3458.057 ops/s
Iteration   1: 4112.115 ops/s
Iteration   2: 4124.989 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  4118.552 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4358532600256 as seed for Random
9686.930 ops/s
Iteration   1: 11298.040 ops/s
Iteration   2: 11361.261 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  11329.651 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4371500270473 as seed for Random
8050.883 ops/s
Iteration   1: 9064.797 ops/s
Iteration   2: 8744.997 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  8904.897 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4384419293170 as seed for Random
1294.333 ops/s
Iteration   1: 2105.503 ops/s
Iteration   2: 2087.367 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  2096.435 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4397415819873 as seed for Random
123.781 ops/s
Iteration   1: 91.338 ops/s
Iteration   2: 84.936 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  88.137 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4410712423648 as seed for Random
1391.732 ops/s
Iteration   1: 3379.899 ops/s
Iteration   2: 3360.916 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  3370.407 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4423639028623 as seed for Random
2286.957 ops/s
Iteration   1: 2929.144 ops/s
Iteration   2: 2893.614 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  2911.379 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4436571923109 as seed for Random
2428.379 ops/s
Iteration   1: 3081.288 ops/s
Iteration   2: 3058.432 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  3069.860 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4449519171866 as seed for Random
2308.436 ops/s
Iteration   1: 3105.771 ops/s
Iteration   2: 2869.520 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  2987.646 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4462460803833 as seed for Random
2320.015 ops/s
Iteration   1: 3170.554 ops/s
Iteration   2: 3183.704 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  3177.129 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4475400106936 as seed for Random
576.489 ops/s
Iteration   1: 728.169 ops/s
Iteration   2: 724.378 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  726.273 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4488350415500 as seed for Random
3210.838 ops/s
Iteration   1: 4239.682 ops/s
Iteration   2: 4254.966 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  4247.324 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4501294227751 as seed for Random
839.795 ops/s
Iteration   1: 2338.686 ops/s
Iteration   2: 2343.444 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  2341.065 ops/s


# Run complete. Total time: 00:03:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt      Score   Error  Units
Serialization.avajejsonb           thrpt    2   4686.963          ops/s
Serialization.avajejsonb_jackson   thrpt    2   4118.552          ops/s
Serialization.dsljson              thrpt    2  11329.651          ops/s
Serialization.dsljson_reflection   thrpt    2   8904.897          ops/s
Serialization.fastjson             thrpt    2   2096.435          ops/s
Serialization.flexjson             thrpt    2     88.137          ops/s
Serialization.genson               thrpt    2   3370.407          ops/s
Serialization.gson                 thrpt    2   2911.379          ops/s
Serialization.jackson              thrpt    2   3069.860          ops/s
Serialization.jackson_afterburner  thrpt    2   2987.646          ops/s
Serialization.jackson_blackbird    thrpt    2   3177.129          ops/s
Serialization.jodd                 thrpt    2    726.273          ops/s
Serialization.logansquare          thrpt    2   4247.324          ops/s
Serialization.moshi                thrpt    2   2341.065          ops/s
