# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4427678298846 as seed for Random
1516.380 ops/s
Iteration   1: 1609.366 ops/s
Iteration   2: 1549.062 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  1579.214 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4440840859505 as seed for Random
1360.563 ops/s
Iteration   1: 1485.824 ops/s
Iteration   2: 1454.018 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  1469.921 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4453973191744 as seed for Random
4505.968 ops/s
Iteration   1: 4624.781 ops/s
Iteration   2: 4654.577 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  4639.679 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4467170758728 as seed for Random
3276.749 ops/s
Iteration   1: 3414.470 ops/s
Iteration   2: 3269.206 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  3341.838 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4480284014647 as seed for Random
777.932 ops/s
Iteration   1: 841.474 ops/s
Iteration   2: 841.047 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  841.261 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4493432053465 as seed for Random
36.360 ops/s
Iteration   1: 18.747 ops/s
Iteration   2: 17.870 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  18.309 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4506648217227 as seed for Random
1001.988 ops/s
Iteration   1: 1154.993 ops/s
Iteration   2: 1177.417 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  1166.205 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4519841433045 as seed for Random
1041.203 ops/s
Iteration   1: 1127.923 ops/s
Iteration   2: 1110.497 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  1119.210 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4532989017491 as seed for Random
1079.067 ops/s
Iteration   1: 1141.122 ops/s
Iteration   2: 1184.972 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  1163.047 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4546119497746 as seed for Random
1099.050 ops/s
Iteration   1: 1199.635 ops/s
Iteration   2: 1184.032 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  1191.834 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4559219649545 as seed for Random
1082.373 ops/s
Iteration   1: 1165.969 ops/s
Iteration   2: 1171.826 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  1168.898 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4572379354589 as seed for Random
270.287 ops/s
Iteration   1: 291.343 ops/s
Iteration   2: 289.698 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  290.520 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4585492931077 as seed for Random
1319.186 ops/s
Iteration   1: 1409.078 ops/s
Iteration   2: 1389.421 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  1399.249 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4598561440440 as seed for Random
921.780 ops/s
Iteration   1: 1001.727 ops/s
Iteration   2: 994.075 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  997.901 ops/s


# Run complete. Total time: 00:03:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt     Score   Error  Units
Serialization.avajejsonb           thrpt    2  1579.214          ops/s
Serialization.avajejsonb_jackson   thrpt    2  1469.921          ops/s
Serialization.dsljson              thrpt    2  4639.679          ops/s
Serialization.dsljson_reflection   thrpt    2  3341.838          ops/s
Serialization.fastjson             thrpt    2   841.261          ops/s
Serialization.flexjson             thrpt    2    18.309          ops/s
Serialization.genson               thrpt    2  1166.205          ops/s
Serialization.gson                 thrpt    2  1119.210          ops/s
Serialization.jackson              thrpt    2  1163.047          ops/s
Serialization.jackson_afterburner  thrpt    2  1191.834          ops/s
Serialization.jackson_blackbird    thrpt    2  1168.898          ops/s
Serialization.jodd                 thrpt    2   290.520          ops/s
Serialization.logansquare          thrpt    2  1399.249          ops/s
Serialization.moshi                thrpt    2   997.901          ops/s
