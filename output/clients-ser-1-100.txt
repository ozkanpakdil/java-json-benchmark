# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4275668665554 as seed for Random
2778.183 ops/s
Iteration   1: 3158.928 ops/s
Iteration   2: 3189.031 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  3173.980 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4288857413976 as seed for Random
2489.855 ops/s
Iteration   1: 2996.239 ops/s
Iteration   2: 2993.000 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  2994.620 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4302069554672 as seed for Random
7083.820 ops/s
Iteration   1: 9626.271 ops/s
Iteration   2: 9483.050 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  9554.661 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4315176511600 as seed for Random
6417.243 ops/s
Iteration   1: 7311.317 ops/s
Iteration   2: 7187.377 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  7249.347 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4328385744359 as seed for Random
927.304 ops/s
Iteration   1: 1738.669 ops/s
Iteration   2: 1699.539 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  1719.104 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4341563506974 as seed for Random
112.055 ops/s
Iteration   1: 81.011 ops/s
Iteration   2: 76.783 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  78.897 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 42.86% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4355015644994 as seed for Random
1721.120 ops/s
Iteration   1: 2476.720 ops/s
Iteration   2: 2491.442 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  2484.081 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 50.00% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4368164412717 as seed for Random
1676.203 ops/s
Iteration   1: 2232.587 ops/s
Iteration   2: 2293.224 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  2262.906 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 57.14% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4381314404193 as seed for Random
1708.008 ops/s
Iteration   1: 2259.852 ops/s
Iteration   2: 2250.224 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  2255.038 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4394523620714 as seed for Random
1633.584 ops/s
Iteration   1: 2381.232 ops/s
Iteration   2: 2414.510 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  2397.871 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4407709348081 as seed for Random
1714.490 ops/s
Iteration   1: 2456.753 ops/s
Iteration   2: 2444.368 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  2450.561 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 78.57% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4420928895914 as seed for Random
393.353 ops/s
Iteration   1: 565.374 ops/s
Iteration   2: 580.018 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  572.696 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4434174896210 as seed for Random
2308.147 ops/s
Iteration   1: 3211.030 ops/s
Iteration   2: 3196.439 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  3203.734 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 92.86% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4447358466595 as seed for Random
1077.815 ops/s
Iteration   1: 1794.643 ops/s
Iteration   2: 1843.681 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  1819.162 ops/s


# Run complete. Total time: 00:03:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt     Score   Error  Units
Serialization.avajejsonb           thrpt    2  3173.980          ops/s
Serialization.avajejsonb_jackson   thrpt    2  2994.620          ops/s
Serialization.dsljson              thrpt    2  9554.661          ops/s
Serialization.dsljson_reflection   thrpt    2  7249.347          ops/s
Serialization.fastjson             thrpt    2  1719.104          ops/s
Serialization.flexjson             thrpt    2    78.897          ops/s
Serialization.genson               thrpt    2  2484.081          ops/s
Serialization.gson                 thrpt    2  2262.906          ops/s
Serialization.jackson              thrpt    2  2255.038          ops/s
Serialization.jackson_afterburner  thrpt    2  2397.871          ops/s
Serialization.jackson_blackbird    thrpt    2  2450.561          ops/s
Serialization.jodd                 thrpt    2   572.696          ops/s
Serialization.logansquare          thrpt    2  3203.734          ops/s
Serialization.moshi                thrpt    2  1819.162          ops/s
