# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4514918159140 as seed for Random
951.450 ops/s
Iteration   1: 1456.396 ops/s
Iteration   2: 1459.139 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  1457.767 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4527869520040 as seed for Random
624.769 ops/s
Iteration   1: 1245.869 ops/s
Iteration   2: 1239.021 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  1242.445 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4540846996743 as seed for Random
5038.766 ops/s
Iteration   1: 6982.403 ops/s
Iteration   2: 6911.398 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  6946.901 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4553777647141 as seed for Random
4196.599 ops/s
Iteration   1: 5471.061 ops/s
Iteration   2: 5540.406 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  5505.734 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4566705057680 as seed for Random
639.969 ops/s
Iteration   1: 1111.168 ops/s
Iteration   2: 1096.820 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  1103.994 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4579612901389 as seed for Random
223.890 ops/s
Iteration   1: 379.709 ops/s
Iteration   2: 406.498 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  393.104 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 42.86% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4592642585109 as seed for Random
757.710 ops/s
Iteration   1: 1157.608 ops/s
Iteration   2: 1175.337 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  1166.472 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 50.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4605621029377 as seed for Random
772.508 ops/s
Iteration   1: 1214.749 ops/s
Iteration   2: 1216.457 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  1215.603 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 57.14% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4618595654960 as seed for Random
622.236 ops/s
Iteration   1: 1038.293 ops/s
Iteration   2: 1036.745 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  1037.519 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4631513714457 as seed for Random
658.673 ops/s
Iteration   1: 1054.012 ops/s
Iteration   2: 1066.312 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  1060.162 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4644432524234 as seed for Random
597.842 ops/s
Iteration   1: 1055.255 ops/s
Iteration   2: 1070.233 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  1062.744 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 78.57% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4657373141047 as seed for Random
558.249 ops/s
Iteration   1: 1080.486 ops/s
Iteration   2: 1056.142 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  1068.314 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4670325636511 as seed for Random
508.197 ops/s
Iteration   1: 993.522 ops/s
Iteration   2: 1170.059 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  1081.791 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 92.86% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4683320358687 as seed for Random
800.994 ops/s
Iteration   1: 1108.212 ops/s
Iteration   2: 1111.248 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  1109.730 ops/s


# Run complete. Total time: 00:03:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt     Score   Error  Units
Deserialization.avajejsonb           thrpt    2  1457.767          ops/s
Deserialization.avajejsonb_jackson   thrpt    2  1242.445          ops/s
Deserialization.dsljson              thrpt    2  6946.901          ops/s
Deserialization.dsljson_reflection   thrpt    2  5505.734          ops/s
Deserialization.fastjson             thrpt    2  1103.994          ops/s
Deserialization.flexjson             thrpt    2   393.104          ops/s
Deserialization.genson               thrpt    2  1166.472          ops/s
Deserialization.gson                 thrpt    2  1215.603          ops/s
Deserialization.jackson              thrpt    2  1037.519          ops/s
Deserialization.jackson_afterburner  thrpt    2  1060.162          ops/s
Deserialization.jackson_blackbird    thrpt    2  1062.744          ops/s
Deserialization.jodd                 thrpt    2  1068.314          ops/s
Deserialization.logansquare          thrpt    2  1081.791          ops/s
Deserialization.moshi                thrpt    2  1109.730          ops/s
