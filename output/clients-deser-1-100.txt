# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4313925097206 as seed for Random
991.302 ops/s
Iteration   1: 1355.397 ops/s
Iteration   2: 1362.089 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  1358.743 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 7.14% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4326831638635 as seed for Random
646.040 ops/s
Iteration   1: 1209.640 ops/s
Iteration   2: 1233.108 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  1221.374 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 14.29% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4339774462193 as seed for Random
5405.324 ops/s
Iteration   1: 6998.032 ops/s
Iteration   2: 7027.008 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  7012.520 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 21.43% complete, ETA 00:02:22
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4352717889811 as seed for Random
4393.792 ops/s
Iteration   1: 5482.198 ops/s
Iteration   2: 5493.680 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  5487.939 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 28.57% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4365632352453 as seed for Random
712.592 ops/s
Iteration   1: 1104.336 ops/s
Iteration   2: 1106.586 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  1105.461 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 35.71% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4378534692117 as seed for Random
217.808 ops/s
Iteration   1: 330.890 ops/s
Iteration   2: 356.092 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  343.491 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 42.86% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4391518384996 as seed for Random
937.548 ops/s
Iteration   1: 1256.551 ops/s
Iteration   2: 1235.785 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  1246.168 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 50.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4404398745357 as seed for Random
804.928 ops/s
Iteration   1: 1178.746 ops/s
Iteration   2: 1146.653 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  1162.700 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 57.14% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4417312194854 as seed for Random
638.592 ops/s
Iteration   1: 1012.493 ops/s
Iteration   2: 1006.242 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  1009.367 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 64.29% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4430218636787 as seed for Random
746.147 ops/s
Iteration   1: 1054.324 ops/s
Iteration   2: 1043.238 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  1048.781 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 71.43% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4443101077406 as seed for Random
684.080 ops/s
Iteration   1: 996.793 ops/s
Iteration   2: 1018.105 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  1007.449 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 78.57% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4455998952432 as seed for Random
656.891 ops/s
Iteration   1: 1106.921 ops/s
Iteration   2: 1121.681 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  1114.301 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 85.71% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4468927583015 as seed for Random
597.296 ops/s
Iteration   1: 1137.542 ops/s
Iteration   2: 1161.146 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  1149.344 ops/s


# JMH version: 1.35
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 92.86% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4481840826449 as seed for Random
753.022 ops/s
Iteration   1: 1072.407 ops/s
Iteration   2: 1091.530 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  1081.968 ops/s


# Run complete. Total time: 00:03:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt     Score   Error  Units
Deserialization.avajejsonb           thrpt    2  1358.743          ops/s
Deserialization.avajejsonb_jackson   thrpt    2  1221.374          ops/s
Deserialization.dsljson              thrpt    2  7012.520          ops/s
Deserialization.dsljson_reflection   thrpt    2  5487.939          ops/s
Deserialization.fastjson             thrpt    2  1105.461          ops/s
Deserialization.flexjson             thrpt    2   343.491          ops/s
Deserialization.genson               thrpt    2  1246.168          ops/s
Deserialization.gson                 thrpt    2  1162.700          ops/s
Deserialization.jackson              thrpt    2  1009.367          ops/s
Deserialization.jackson_afterburner  thrpt    2  1048.781          ops/s
Deserialization.jackson_blackbird    thrpt    2  1007.449          ops/s
Deserialization.jodd                 thrpt    2  1114.301          ops/s
Deserialization.logansquare          thrpt    2  1149.344          ops/s
Deserialization.moshi                thrpt    2  1081.968          ops/s
